#!/bin/sh
# This comment make this script an executable.  Do *NOT* delete \
eval exec ${UTDTOOLS}/bin/${UTDTOOLSOS}/cometFlow -s l -dir logic -n -v -f -do ${UTDTOOLS}/scripts/flow/logic ${1+"$@"}

set routine logic

global env
global argv

# The defaults settings.

if {!([info exists env(UTDTOOLS)])} {
  puts stderr "ERROR:cannot get OpenRoad environment variable:UTDTOOLS"
  exit 1
}

# Get the design name
set args $argv
set num_args [llength $args]
for {set i 0} {$i < $num_args} {incr i} {
  set arg_el [lindex $args $i]
  utdmsg imsg null "argv\[$i]: $arg_el\n"
}
incr i -1
set dsn [lindex $args $i]

utdmsg imsg null "Welcome to the Run_YOSYS Program...\n"

# Now do some functionality

# We should be in the logic directory as we created a directory here.
set dirname [pwd]
set folder [file tail $dirname]
if {$folder != "logic"} {
  utdmsg errmg $routine "we are not in the proper directory:$folder\n"
  utdwait
  exit 1
}

# Now source any necessary do files.
::utdtools::source_flow_do_files $dsn l

# ######################## Verilog  ############################
set input_rtl $::utdtools::rtl_allS
foreach input_name $input_rtl {
  # change this to multiple files if needed
  set fpath [::utdtools::search_input $input_name [list . ../ ../../] true]
  if {$fpath == ""} {
    utdmsg errmsg $routine "No input file named $input_name found. Aborting\n"
    utdwait
    exit 1
  }
}

# ######################## SDC ############################
set input_name $::utdtools::sdc_fileS
if {$input_name != ""} {
  # change this to multiple files if needed
  set fpath [::utdtools::search_input $input_name [list . ../ ../../] true]
  if {$fpath == ""} {
    utdmsg errmsg $routine "No input file named $input_name found. Aborting\n"
    utdwait
    exit 1
  }
}
utdmsg imsg $routine "reading SDC file:$fpath\n"

# ######################## LIBERTY ############################
set input_name $::utdtools::timing_fileS
if {$input_name != ""} {
  # change this to multiple files if needed
  set fpath [::utdtools::search_input $input_name [list . ../ ../../] true]
  if {$fpath == ""} {
    utdmsg errmsg $routine "No input file named $input_name found. Aborting\n"
    utdwait
    exit 1
  }
}
utdmsg imsg $routine "reading Synopsys Library file:$fpath\n"

# ######################## YOSYS_SCRIPT.TCL ############################
set yosys_script [file join $env(UTDTOOLS) tcl logic yosys_script.tcl]

::utdtools::backup_directory output
::utdtools::backup_directory rpt

utdmsg imsg $routine "Calling YOSYS.\n"
global statusG
global outputG
set program_cmd "yosys -c $yosys_script"
if {[catch {eval bgexec statusG -output outputG -keepnewline false -onoutput [list {puts stderr}] $program_cmd} msg]} {
  set fp [open "problem" w]
  puts $fp "we got the following msg:$msg"
 close $fp
}

utdmsg imsg null "Logic Synthesis Completed.\n"
exit 0
