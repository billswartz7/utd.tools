#!/bin/sh
# This comment makes this script an executable. Do *NOT* delete \
eval exec ${ICDIR}/bin/icos itranslate -v -do $0 ${1+"$@"}

set routine cut
set previous logic

global env
global argv
global icdirG
if {[info exists env(ICDIR)]} {
  set icdirG $env(ICDIR)
} {
  puts stderr "ERROR:cannot get iTools environment variable:ICDIR"
  exit 1
}
lappend auto_path $icdirG/tcl/common

set args $argv
set num_args [llength $args]
for {set i 0} {$i < $num_args} {incr i} {
  set arg_el [lindex $args $i]
  icmessage imsg null "argv\[$i]: $arg_el\n"
}
incr i -1
set dsn [lindex $args $i]

icbackup_directory cut
cd cut

# Now source any necessary do files.
::utdtools::source_flow_do_files $dsn c

# ######################## LEF ############################
set input_name $::utdtools::lef_fileS
if {$input_name != ""} {
  # change this to multiple files if needed
  set fpath [::utdtools::search_input $input_name [list . ../${previous}/output ../ ../../] true]
  if {$fpath == ""} {
    icmessage errmsg $routine "No input file named $input_name found. Aborting\n"
    icwait
    exit 1
  }
}
icmessage imsg $routine "reading LEF file:$fpath\n"
icread_lef $fpath -scale -model_obs keepout

# ######################## VERILOG ############################
set input_name $::utdtools::verilog_fileS
if {$input_name != ""} {
  # change this to multiple files if needed
  set fpath [::utdtools::search_input $input_name [list . ../${previous}/output ../ ../../] true]
  if {$fpath == ""} {
    icmessage errmsg $routine "No input file named $input_name found. Aborting\n"
    icwait
    exit 1
  }
}
icmessage imsg $routine "reading Verilog file:$fpath\n"
icread_verilog -auto  -flatten $fpath

# ######################## TIMING ############################
set input_name $::utdtools::timing_fileS
if {$input_name != ""} {
  # change this to multiple files if needed
  set fpath [::utdtools::search_input $input_name [list . ../${previous}/output ../ ../../] true]
  if {$fpath == ""} {
    icmessage errmsg $routine "No input file named $input_name found. Aborting\n"
    icwait
    exit 1
  }
}
icmessage imsg $routine "reading Synopsys Library file:$fpath\n"
icread_synopsys -new $fpath

# ######################## OUTPUT ############################
icbackup_directory output
cd output

icwrite_def ${dsn}.def -unplaced

icmessage imsg null "waiting here\n"
icexit 0
