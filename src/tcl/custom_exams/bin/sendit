#!/bin/bash

# some variables
# refactoring the script such that all these values are
# passed from the outside as arguments should be easy

# Script begins here.
if [ $# -lt 2 ]
then
    echo "Syntax: sendit <user> <file> : send an email to the"
    echo "                               with an attached file"
    echo " "
    exit 1  ;
fi

user=$1 ;
attach_file=$2 ;
send_it=0

source envelope.data

to="${1}@utdallas.edu"
boundary="ZZ_/afg6432dfgkl.94531q"
declare -a attachments
attachments=( "${attach_file}" )
if [ $send_it != 0 ] ; then
  # one may also use -f here to set the envelope-from
  sendmail_pgm="/usr/sbin/sendmail -t -oi"
else 
  sendmail_pgm="more"
fi

echo "sendmail_pgm = $sendmail_pgm"

# Build headers
{

printf '%s\n' "From: $from
To: $to
Subject: $subject
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary=\"$boundary\"

--${boundary}
Content-Type: text/plain; charset=\"US-ASCII\"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

$body
"
 
# now loop over the attachments, guess the type
# and produce the corresponding part, encoded base64
for file in "${attachments[@]}"; do

  [ ! -f "$file" ] && echo "Warning: attachment $file not found, skipping" >&2 && continue

  mimetype=$(get_mime_type "$file") 
 
  printf '%s\n' "--${boundary}
Content-Type: $mimetype
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename=\"$file\"
"
 
  base64 "$file"
  echo
done
 
# print last boundary with closing --
printf '%s\n' "--${boundary}--"
   
} | $sendmail_pgm
