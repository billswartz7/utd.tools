
	 			        




module iobdg (
      iob_pcx_stall_pq, iob_jbi_mondo_nack, iob_jbi_mondo_ack, 
   iob_jbi_dbg_lo_vld, iob_jbi_dbg_lo_data, iob_jbi_dbg_hi_vld, 
   iob_jbi_dbg_hi_data, iob_io_dbg_en, iob_io_dbg_data, 
   iob_io_dbg_ck_p, iob_io_dbg_ck_n, iob_ctu_coreavail, 
   iob_cpx_req_cq, iob_cpx_data_ca, iob_clk_tr, iob_clk_l2_tr, 
   iob_clk_data, iob_clk_stall, iob_clk_vld, iob_dram02_data, 
   iob_dram02_stall, iob_dram02_vld, iob_dram13_data, 
   iob_dram13_stall, iob_dram13_vld, iob_jbi_pio_data, 
   iob_jbi_pio_stall, iob_jbi_pio_vld, iob_jbi_spi_data, 
   iob_jbi_spi_stall, iob_jbi_spi_vld, iob_tap_data, iob_tap_stall, 
   iob_tap_vld, iob_scanout, 
      tap_iob_vld, tap_iob_stall, tap_iob_data, pcx_iob_data_rdy_px2, 
   pcx_iob_data_px2, l2_dbgbus_23, l2_dbgbus_01, jbus_grst_l, 
   jbus_gdbginit_l, jbus_gclk, jbus_arst_l, jbus_adbginit_l, 
   jbi_iob_spi_vld, jbi_iob_spi_stall, jbi_iob_spi_data, 
   jbi_iob_pio_vld, jbi_iob_pio_stall, jbi_iob_pio_data, 
   jbi_iob_mondo_vld, jbi_iob_mondo_data, io_trigin, io_temp_trig, 
   global_shift_enable, efc_iob_sernum2_dshift, 
   efc_iob_sernum1_dshift, efc_iob_sernum0_dshift, 
   efc_iob_fusestat_dshift, efc_iob_fuse_data, 
   efc_iob_coreavail_dshift, dram13_iob_vld, dram13_iob_stall, 
   dram13_iob_data, dram02_iob_vld, dram02_iob_stall, 
   dram02_iob_data, dbg_en_23, dbg_en_01, ctu_tst_short_chain, 
   ctu_tst_scanmode, ctu_tst_scan_disable, ctu_tst_pre_grst_l, 
   ctu_tst_macrotest, ctu_iob_wake_thr, cpx_iob_grant_cx2, 
   cmp_grst_l, cmp_gdbginit_l, cmp_gclk, cmp_arst_l, cmp_adbginit_l, 
   clspine_jbus_tx_sync, clspine_jbus_rx_sync, 
   clspine_iob_resetstat_wr, clspine_iob_resetstat, clk_iob_vld, 
   clk_iob_stall, clk_iob_jbus_cken, clk_iob_data, clk_iob_cmp_cken, 
   efc_iob_fuse_clk1, iob_scanin
   );

   
      input		clk_iob_cmp_cken;	   input [-1:0]clk_iob_data;	   input		clk_iob_jbus_cken;	   input		clk_iob_stall;		   input		clk_iob_vld;		   input [-1:0]clspine_iob_resetstat;   input		clspine_iob_resetstat_wr;   input		clspine_jbus_rx_sync;	   input		clspine_jbus_tx_sync;	   input		cmp_adbginit_l;		   input		cmp_arst_l;		   input		cmp_gclk;		   input		cmp_gdbginit_l;		   input		cmp_grst_l;		   input [-1:0]cpx_iob_grant_cx2;	   input		ctu_iob_wake_thr;	   input		ctu_tst_macrotest;	   input		ctu_tst_pre_grst_l;	   input		ctu_tst_scan_disable;	   input		ctu_tst_scanmode;	   input		ctu_tst_short_chain;	   input		dbg_en_01;		   input		dbg_en_23;		   input [-1:0]dram02_iob_data;	   input		dram02_iob_stall;	   input		dram02_iob_vld;		   input [-1:0]dram13_iob_data;	   input		dram13_iob_stall;	   input		dram13_iob_vld;		   input		efc_iob_coreavail_dshift;   input		efc_iob_fuse_data;	   input		efc_iob_fusestat_dshift;   input		efc_iob_sernum0_dshift;	   input		efc_iob_sernum1_dshift;	   input		efc_iob_sernum2_dshift;	   input		global_shift_enable;	   input		io_temp_trig;		   input		io_trigin;		   input [-1:0]jbi_iob_mondo_data;   input		jbi_iob_mondo_vld;	   input [-1:0]jbi_iob_pio_data;	   input		jbi_iob_pio_stall;	   input		jbi_iob_pio_vld;	   input [-1:0]jbi_iob_spi_data;	   input		jbi_iob_spi_stall;	   input		jbi_iob_spi_vld;	   input		jbus_adbginit_l;	   input		jbus_arst_l;		   input		jbus_gclk;		   input		jbus_gdbginit_l;	   input		jbus_grst_l;		   input [39:0]		l2_dbgbus_01;		   input [39:0]		l2_dbgbus_23;		   input [-1:0]pcx_iob_data_px2;	   input		pcx_iob_data_rdy_px2;	   input [-1:0]tap_iob_data;	   input		tap_iob_stall;		   input		tap_iob_vld;		   
   
      output		iob_clk_l2_tr;		   output		iob_clk_tr;		   output [-1:0]iob_cpx_data_ca;	   output [-1:0]iob_cpx_req_cq;	   output [-1:0]iob_ctu_coreavail;   output [2:0]		iob_io_dbg_ck_n;	   output [2:0]		iob_io_dbg_ck_p;	   output [39:0]	iob_io_dbg_data;	   output		iob_io_dbg_en;		   output [47:0]	iob_jbi_dbg_hi_data;	   output		iob_jbi_dbg_hi_vld;	   output [47:0]	iob_jbi_dbg_lo_data;	   output		iob_jbi_dbg_lo_vld;	   output		iob_jbi_mondo_ack;	   output		iob_jbi_mondo_nack;	   output		iob_pcx_stall_pq;	   
   
      wire [-1:0];// From iobdg_ctrl of iobdg_ctrl.v
   wire			bounce_ack_rd;		// From i2c of i2c.v
   wire			bounce_ack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			bounce_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			bounce_ucb_sel;		// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]c2i_packet;	// From c2i of c2i.v
   wire			c2i_packet_is_rd_req;	// From c2i of c2i.v
   wire			c2i_packet_is_wr_req;	// From c2i of c2i.v
   wire			c2i_packet_vld;		// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]c2i_rd_nack_packet;// From c2i of c2i.v
   wire			cmp_rclk;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;		// From i2c of i2c.v
   wire			bounce_ack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			bounce_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			bounce_ucb_sel;		// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]c2i_packet;	// From c2i of c2i.v
   wire			c2i_packet_is_rd_req;	// From c2i of c2i.v
   wire			c2i_packet_is_wr_req;	// From c2i of c2i.v
   wire			c2i_packet_vld;		// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]c2i_rd_nack_packet;// From c2i of c2i.v
   wire			cmp_rclk;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			bounce_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			bounce_ucb_sel;		// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]c2i_packet;	// From c2i of c2i.v
   wire			c2i_packet_is_rd_req;	// From c2i of c2i.v
   wire			c2i_packet_is_wr_req;	// From c2i of c2i.v
   wire			c2i_packet_vld;		// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]c2i_rd_nack_packet;// From c2i of c2i.v
   wire			cmp_rclk;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			bounce_ucb_sel;		// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]c2i_packet;	// From c2i of c2i.v
   wire			c2i_packet_is_rd_req;	// From c2i of c2i.v
   wire			c2i_packet_is_wr_req;	// From c2i of c2i.v
   wire			c2i_packet_vld;		// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]c2i_rd_nack_packet;// From c2i of c2i.v
   wire			cmp_rclk;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;		// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]c2i_packet;	// From c2i of c2i.v
   wire			c2i_packet_is_rd_req;	// From c2i of c2i.v
   wire			c2i_packet_is_wr_req;	// From c2i of c2i.v
   wire			c2i_packet_vld;		// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]c2i_rd_nack_packet;// From c2i of c2i.v
   wire			cmp_rclk;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [-1:0];	// From c2i of c2i.v
   wire			c2i_packet_is_rd_req;	// From c2i of c2i.v
   wire			c2i_packet_is_wr_req;	// From c2i of c2i.v
   wire			c2i_packet_vld;		// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]c2i_rd_nack_packet;// From c2i of c2i.v
   wire			cmp_rclk;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From c2i of c2i.v
   wire			c2i_packet_is_wr_req;	// From c2i of c2i.v
   wire			c2i_packet_vld;		// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]c2i_rd_nack_packet;// From c2i of c2i.v
   wire			cmp_rclk;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From c2i of c2i.v
   wire			c2i_packet_vld;		// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]c2i_rd_nack_packet;// From c2i of c2i.v
   wire			cmp_rclk;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;		// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]c2i_rd_nack_packet;// From c2i of c2i.v
   wire			cmp_rclk;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [-1:0];// From c2i of c2i.v
   wire			cmp_rclk;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;		// From bw_clk_cl_iobdg_cmp of bw_clk_cl_iobdg_cmp.v
   wire [64:0]		cpu_buf_din_hi;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [64:0]		;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_din_lo;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [64:0]		;		// From c2i of c2i.v
   wire [64:0]		cpu_buf_dout_hi;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [64:0]		;	// From cpu_buf_hi of bw_rf_16x65.v
   wire [64:0]		cpu_buf_dout_lo;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [64:0]		;	// From cpu_buf_lo of bw_rf_16x65.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_head_ptr;// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];// From c2i of c2i.v
   wire			cpu_buf_rd_l;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;		// From c2i of c2i.v
   wire [`IOB_CPU_BUF_INDEX-1:0]cpu_buf_tail_ptr;// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [-1:0];// From c2i of c2i.v
   wire			cpu_buf_wr_l;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;		// From c2i of c2i.v
   wire			cpu_intctrl_acc;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_intman_acc;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			cpu_mondo_rd_d2;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;	// From c2i of c2i.v
   wire			cpu_mondo_wr_d2;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From c2i of c2i.v
   wire [63:0]		creg_dbg_enet_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_enet_idleval;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_iob_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_hi_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cmp1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_cnt1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask0;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_jbus_lo_mask1;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpa_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_cmpb_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_ctrl;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maska_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_maskb_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire [63:0]		;// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		creg_dbg_l2_vis_trig_delay_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire [63:0]		;// From iobdg_ctrl of iobdg_ctrl.v
   wire			creg_intctrl_mask;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_INT_VEC_WIDTH-1:0]creg_jintv_vec;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];	// From iobdg_ctrl of iobdg_ctrl.v
   wire [4:0]		creg_margin_16x65;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [4:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`IOB_CPU_WIDTH-1:0]first_availcore;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];	// From iobdg_ctrl of iobdg_ctrl.v
   wire [159:0]		int_buf_din_raw;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [159:0]		;	// From c2i of c2i.v
   wire [159:0]		int_buf_dout_raw;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [159:0]		;	// From int_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_head_ptr;// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];// From i2c of i2c.v
   wire			int_buf_hit_hwm;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;	// From i2c of i2c.v
   wire [`IOB_INT_BUF_INDEX-1:0]int_buf_tail_ptr;// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];// From i2c of i2c.v
   wire			int_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_cpu_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [-1:0];	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [14:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_cpu_dout_raw;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [14:0]		;	// From int_cpu_stat of iobdg_1r1w_rf4.v
   wire			int_cpu_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			int_srvcd;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;		// From i2c of i2c.v
   wire			int_srvcd_d1;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]int_vec_addr;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [-1:0];	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_din_raw;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [14:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [14:0]		int_vec_dout_raw;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [14:0]		;	// From int_vec_stat of iobdg_1r1w_rf4.v
   wire			int_vec_wr_l;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			io_buf_avail;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;		// From i2c of i2c.v
   wire [159:0]		io_buf_din_raw;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [159:0]		;		// From i2c of i2c.v
   wire [159:0]		io_buf_dout_raw;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [159:0]		;	// From io_buf of iobdg_1r1w_rf16x160.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_head_ptr;	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];	// From i2c of i2c.v
   wire [`IOB_IO_BUF_INDEX-1:0]io_buf_tail_ptr;	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];	// From i2c of i2c.v
   wire			io_buf_wr;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;		// From i2c of i2c.v
   wire [`IOB_INT_TAB_INDEX-1:0]io_intman_addr;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [-1:0];	// From i2c of i2c.v
   wire [63:0]		io_mondo_data0_din_s;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From i2c of i2c.v
   wire [63:0]		io_mondo_data1_din_s;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [63:0]		;	// From i2c of i2c.v
   wire [`IOB_CPUTHR_INDEX-1:0]io_mondo_data_wr_addr_s;// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];// From i2c of i2c.v
   wire			io_mondo_data_wr_s;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;	// From i2c of i2c.v
   wire [`JBI_IOB_MONDO_SRC_WIDTH-1:0]io_mondo_source_din_s;// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];// From i2c of i2c.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_int_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire [-1:0];// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ack_rd;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;		// From i2c of i2c.v
   wire			iob_int_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_int_ucb_sel;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From c2i of c2i.v
   wire [`UCB_64PAY_PKT_WIDTH-1:0]iob_man_ack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ack_rd;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;		// From i2c of i2c.v
   wire			iob_man_ack_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [`UCB_INT_PKT_WIDTH-1:0]iob_man_int_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_int_rd;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;		// From i2c of i2c.v
   wire			iob_man_int_vld;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			iob_man_ucb_sel;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From c2i of c2i.v
   wire			jbus_rclk;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;		// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			l2_vis_armin;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire			;		// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_hi;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [64:0]		;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_din_lo;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [64:0]		;	// From iobdg_dbg of iobdg_dbg.v
   wire [64:0]		l2_vis_buf_dout_hi;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [64:0]		;	// From l2_vis_buf_hi of bw_rf_16x65.v
   wire [64:0]		l2_vis_buf_dout_lo;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [64:0]		;	// From l2_vis_buf_lo of bw_rf_16x65.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_head_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_rd_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From iobdg_dbg of iobdg_dbg.v
   wire [`IOB_L2_VIS_BUF_INDEX-1:0]l2_vis_buf_tail_ptr;// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_hi_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;	// From iobdg_dbg of iobdg_dbg.v
   wire			l2_vis_buf_wr_lo_l;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From iobdg_dbg of iobdg_dbg.v
   wire			mem_bypass;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;		// From test_stub_scan of test_stub_scan.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;		   wire [-1:0];// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire [-1:0];// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_busy_addr_p2;// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire [-1:0];// From c2i of c2i.v
   wire			mondo_busy_din_p1;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;	// From c2i of c2i.v
   wire			mondo_busy_din_p2;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From c2i of c2i.v
   wire			mondo_busy_dout;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From mondo_busy of iobdg_1r2w_vec.v
   wire [`IOB_CPUTHR_WIDTH-1:0]mondo_busy_vec_f;// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [-1:0];// From mondo_busy of iobdg_1r2w_vec.v
   wire			mondo_busy_wr_p1;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;   wire			;	// From c2i of c2i.v
   wire			mondo_busy_wr_p2;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [64:0]		;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [64:0]		;	// From c2i of c2i.v
   wire [64:0]		mondo_data0_dout_hi;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [64:0]		;	// From mondo_data0_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data0_dout_lo;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire [64:0]		;	// From mondo_data0_lo of bw_rf_16x65.v
   wire			m;	   wire			;	// From c2i of c2i.v
   wire			mondo_data0_wr_lo_l;	// From c2i of c2i.v
   wire [64:0]		mondo_data1_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data1_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data1_dout_hi;	// From mondo_data1_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data1_dout_lo;	// From mondo_data1_lo of bw_rf_16x65.v
   wire			mondo_data1_wr_hi_l;	// From c2i of c2i.v
   wire			mondo_data1_wr_lo_l;	// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_din;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire			;	// From c2i of c2i.v
   wire [64:0]		mondo_data1_din_hi;	// From c2i of c2i.v
   wire [64:0]		mondo_data1_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data1_dout_hi;	// From mondo_data1_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data1_dout_lo;	// From mondo_data1_lo of bw_rf_16x65.v
   wire			mondo_data1_wr_hi_l;	// From c2i of c2i.v
   wire			mondo_data1_wr_lo_l;	// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_din;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire [64:0]		;	// From c2i of c2i.v
   wire [64:0]		mondo_data1_din_lo;	// From c2i of c2i.v
   wire [64:0]		mondo_data1_dout_hi;	// From mondo_data1_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data1_dout_lo;	// From mondo_data1_lo of bw_rf_16x65.v
   wire			mondo_data1_wr_hi_l;	// From c2i of c2i.v
   wire			mondo_data1_wr_lo_l;	// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_din;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire [64:0]		;	// From c2i of c2i.v
   wire [64:0]		mondo_data1_dout_hi;	// From mondo_data1_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data1_dout_lo;	// From mondo_data1_lo of bw_rf_16x65.v
   wire			mondo_data1_wr_hi_l;	// From c2i of c2i.v
   wire			mondo_data1_wr_lo_l;	// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_din;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire [64:0]		;	// From mondo_data1_hi of bw_rf_16x65.v
   wire [64:0]		mondo_data1_dout_lo;	// From mondo_data1_lo of bw_rf_16x65.v
   wire			mondo_data1_wr_hi_l;	// From c2i of c2i.v
   wire			mondo_data1_wr_lo_l;	// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_din;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire [64:0]		;	// From mondo_data1_lo of bw_rf_16x65.v
   wire			mondo_data1_wr_hi_l;	// From c2i of c2i.v
   wire			mondo_data1_wr_lo_l;	// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_din;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire			;	// From c2i of c2i.v
   wire			mondo_data1_wr_lo_l;	// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_din;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire			;	// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p0;// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_din;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire [-1:0];// From c2i of c2i.v
   wire [`IOB_MONDO_DATA_INDEX-1:0]mondo_data_addr_p1;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_din;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;   wire [-1:0];// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_din;// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;   wire [-1:0];// From c2i of c2i.v
   wire [`IOB_MONDO_SRC_WIDTH-1:0]mondo_source_dout;// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;   wire [-1:0];// From mondo_source of iobdg_1r1w_rf32.v
   wire			mondo_source_wr_l;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;   wire			;	// From c2i of c2i.v
   wire [`UCB_NOPAY_PKT_WIDTH-1:0]rd_nack_packet;// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire [-1:0];// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_rd;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;   wire			;		// From i2c of i2c.v
   wire			rd_nack_ucb_buf_acpt;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;		   wire			;	// From iobdg_ctrl of iobdg_ctrl.v
   wire			rd_nack_ucb_sel;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire			;	// From c2i of c2i.v
   wire			rd_nack_vld;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire			;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			rst_l;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;		   wire			;			// From bw_clk_cl_iobdg_jbus of bw_clk_cl_iobdg_jbus.v
   wire			rst_tri_en;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;			   wire			;		// From test_stub_scan of test_stub_scan.v
   wire			sehold;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;		   wire			;			// From test_stub_scan of test_stub_scan.v
   wire			srvc_wr_ack;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;			   wire			;		// From c2i of c2i.v
   wire			tap_mondo_acc_addr_invld_d2_f;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;		   wire			;// From c2i of c2i.v
   wire [`IOB_ADDR_WIDTH-1:0]tap_mondo_acc_addr_s;// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;   wire [-1:0];// From iobdg_ctrl of iobdg_ctrl.v
   wire			tap_mondo_acc_seq_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;   wire			;	// From c2i of c2i.v
   wire			tap_mondo_acc_seq_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire			;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_din_s;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire [63:0]		;	// From iobdg_ctrl of iobdg_ctrl.v
   wire [63:0]		tap_mondo_dout_d2_f;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire [63:0]		;	// From c2i of c2i.v
   wire			tap_mondo_wr_s;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;	   wire			;		// From iobdg_ctrl of iobdg_ctrl.v
   wire			ucb_buf_acpt;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;		   wire			;		// From c2i of c2i.v
   wire [`IOB_IO_BUF_WIDTH-1:0]wr_ack_io_buf_din;// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;		   wire [-1:0];// From c2i of c2i.v
   // End of automatics

   output [`IOB_CLK_WIDTH-1:0]iob_clk_data;	// From c2i of c2i.v
   output		iob_clk_stall;		// From i2c of i2c.v
   output		iob_clk_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram02_data;	// From c2i of c2i.v
   output		iob_dram02_stall;	// From i2c of i2c.v
   output		iob_dram02_vld;		// From c2i of c2i.v
   output [`IOB_DRAM_WIDTH-1:0]iob_dram13_data;	// From c2i of c2i.v
   output		iob_dram13_stall;	// From i2c of i2c.v
   output		iob_dram13_vld;		// From c2i of c2i.v
   output [`IOB_JBI_WIDTH-1:0]iob_jbi_pio_data;	// From c2i of c2i.v
   output		iob_jbi_pio_stall;	// From i2c of i2c.v
   output		iob_jbi_pio_vld;	// From c2i of c2i.v
   output [`IOB_SPI_WIDTH-1:0]iob_jbi_spi_data;	// From c2i of c2i.v
   output		iob_jbi_spi_stall;	// From i2c of i2c.v
   output		iob_jbi_spi_vld;	// From c2i of c2i.v
   output [`IOB_TAP_WIDTH-1:0]iob_tap_data;	// From i2c of i2c.v
   output		iob_tap_stall;		// From c2i of c2i.v
   output		iob_tap_vld;		// From i2c of i2c.v

   
   wire 	  cmp_pre_rst_l;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;   
   output [-1:0]iob_clk_data;	   output		iob_clk_stall;		   output		iob_clk_vld;		   output [-1:0]iob_dram02_data;	   output		iob_dram02_stall;	   output		iob_dram02_vld;		   output [-1:0]iob_dram13_data;	   output		iob_dram13_stall;	   output		iob_dram13_vld;		   output [-1:0]iob_jbi_pio_data;	   output		iob_jbi_pio_stall;	   output		iob_jbi_pio_vld;	   output [-1:0]iob_jbi_spi_data;	   output		iob_jbi_spi_stall;	   output		iob_jbi_spi_vld;	   output [-1:0]iob_tap_data;	   output		iob_tap_stall;		   output		iob_tap_vld;		
   
   wire 	  ;
   wire 	  cmp_rst_l;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;
   wire 	  ;
   wire 	  pre_rx_sync;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;
   wire 	  ;
   wire 	  pre_tx_sync;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;
   wire 	  ;
   wire 	  rx_sync;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;
   wire 	  ;
   wire 	  tx_sync;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;
   wire 	  ;

   input 	  efc_iob_fuse_clk1;
   wire 	  efuse_rclk;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;

   input 	  efc_iob_fuse_clk1;
   wire 	  ;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  se;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;
   
   input 	  iob_scanin;
   output         iob_scanout;
   wire 	  ;

   wire 	  so_0;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;

   wire 	  ;
   wire 	  long_chain_so_0;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;
   wire 	  ;
   wire 	  short_chain_so_0;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;
   wire 	  ;
   wire 	  testmode_l;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;
   wire 	  ;
   
   
   /***********************************************************
    * Hand edit begin fixme
    ***********************************************************/

   /***********************************************************
    * Hand edit end
    ***********************************************************/

   
////////////////////////////////////////////////////////////////////////
// Code start here 
////////////////////////////////////////////////////////////////////////
   /*****************************************************************
    * CMP Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_cmp AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .rclk               (cmp_rclk),
    .so                 (),
    // Inputs
    .gclk               (cmp_gclk),
    .cluster_cken       (clk_iob_cmp_cken),
    .arst_l             (cmp_arst_l),
    .grst_l             (cmp_grst_l),
    .adbginit_l         (cmp_adbginit_l),
    .gdbginit_l         (cmp_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_cmp bw_clk_cl_iobdg_cmp (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;
   
   
   

   

   
   
   

   bw_clk_cl_iobdg_cmp  (.cluster_grst_l(cmp_pre_rst_l),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl (.cluster_grst_l(),
					    /*AUTOINST*/
					    // Outputs
					    .dbginit_l(),	 // Templated
					    .rclk(cmp_rclk),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),
					    
					    					    .dbginit_l(),	 					    .rclk(),	 // Templated
					    .so(),		 // Templated
					    // Inputs
					    .adbginit_l(cmp_adbginit_l), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),	 					    .so(),		 					    					    .adbginit_l(), // Templated
					    .arst_l(cmp_arst_l), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					    .arst_l(), // Templated
					    .cluster_cken(clk_iob_cmp_cken), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					    .cluster_cken(), // Templated
					    .gclk(cmp_gclk),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					    .gclk(),	 // Templated
					    .gdbginit_l(cmp_gdbginit_l), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),	 					    .gdbginit_l(), // Templated
					    .grst_l(cmp_grst_l), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					    .grst_l(), // Templated
					    .se(se),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					    .se(),		 // Templated
					    .si());		 // Templated

   
   // async flop for cmp_rst_l distribution
   dffrl_async_ns #(1) cmp_rst_l_ff (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),		 					    .si());		 
   
      dffrl_async_ns #(1)  (.din(cmp_pre_rst_l),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl (.din(),
			 	     .clk(cmp_rclk),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),
			 	     .clk(),
			 	     .rst_l(cmp_arst_l),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),
			 	     .rst_l(),
			 	     .q(cmp_rst_l));

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),
			 	     .q());

   
   /*****************************************************************
    * JBUS Cluster Header
    *****************************************************************/
   /* bw_clk_cl_iobdg_jbus AUTO_TEMPLATE (
    // Outputs
    .dbginit_l          (),
    .cluster_grst_l     (rst_l),
    .rclk               (jbus_rclk),
    .so                 (),
    // Inputs
    .gclk               (jbus_gclk),
    .cluster_cken       (clk_iob_jbus_cken),
    .arst_l             (jbus_arst_l),
    .grst_l             (jbus_grst_l),
    .adbginit_l         (jbus_adbginit_l),
    .gdbginit_l         (jbus_gdbginit_l),
    .si                 (),
    .se                 (se),
    ); */

   bw_clk_cl_iobdg_jbus bw_clk_cl_iobdg_jbus (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl));

   
   
   

   bw_clk_cl_iobdg_jbus  (/*AUTOINST*/
					      // Outputs
					      .cluster_grst_l(rst_l), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl (
					      					      .cluster_grst_l(), // Templated
					      .dbginit_l(),	 // Templated
					      .rclk(jbus_rclk),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					      .dbginit_l(),	 					      .rclk(),	 // Templated
					      .so(),		 // Templated
					      // Inputs
					      .adbginit_l(jbus_adbginit_l), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),	 					      .so(),		 					      					      .adbginit_l(), // Templated
					      .arst_l(jbus_arst_l), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					      .arst_l(), // Templated
					      .cluster_cken(clk_iob_jbus_cken), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					      .cluster_cken(), // Templated
					      .gclk(jbus_gclk),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					      .gclk(),	 // Templated
					      .gdbginit_l(jbus_gdbginit_l), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),	 					      .gdbginit_l(), // Templated
					      .grst_l(jbus_grst_l), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					      .grst_l(), // Templated
					      .se(se),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					      .se(),		 // Templated
					      .si());		 // Templated


   /*****************************************************************
    * Mux between efuse clock and jbus clock so that the efuse flops
    * are controllable by scan
    *****************************************************************/
   assign 	  efuse_rclk = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),		 					      .si());		 

   
   assign 	   = testmode_l ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl =  ? efc_iob_fuse_clk1 : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl ?  : jbus_rclk;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl : ;

   
   /*****************************************************************
    * Flop Sync signals
    *****************************************************************/
   /* cluster_header_sync AUTO_TEMPLATE (
    // Outputs
    .dram_rx_sync_local(),
    .dram_tx_sync_local(),
    .jbus_rx_sync_local(pre_rx_sync),
    .jbus_tx_sync_local(pre_tx_sync),
    .so(),
    // Inputs
    .dram_rx_sync_global(1'b0),
    .dram_tx_sync_global(1'b0),
    .jbus_rx_sync_global(clspine_jbus_rx_sync),
    .jbus_tx_sync_global(clspine_jbus_tx_sync),
    .cmp_gclk(cmp_gclk),
    .cmp_rclk(cmp_rclk),
    .si(),
    .se(se)); */

   cluster_header_sync cluster_header_sync (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl;

   
   
   

   cluster_header_sync  (.jbus_rx_sync_local(pre_rx_sync),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl (.jbus_rx_sync_local(),
					    .jbus_tx_sync_local(pre_tx_sync),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),
					    .jbus_tx_sync_local(),
					    /*AUTOINST*/
					    // Outputs
					    .dram_rx_sync_local(), // Templated
					    .dram_tx_sync_local(), // Templated
					    .so(),		 // Templated
					    // Inputs
					    .dram_rx_sync_global(1'b0), // Templated
					    .dram_tx_sync_global(1'b0), // Templated
					    .jbus_rx_sync_global(clspine_jbus_rx_sync), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl),
					    
					    					    .dram_rx_sync_local(), 					    .dram_tx_sync_local(), 					    .so(),		 					    					    .dram_rx_sync_global(1bb), 					    .dram_tx_sync_global(1bb), 					    .jbus_rx_sync_global(), // Templated
					    .jbus_tx_sync_global(clspine_jbus_tx_sync), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					    .jbus_tx_sync_global(), // Templated
					    .cmp_gclk(cmp_gclk), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					    .cmp_gclk(), // Templated
					    .cmp_rclk(cmp_rclk), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					    .cmp_rclk(), // Templated
					    .si(),		 // Templated
					    .se(se));		 // Templated

   // fl), 					    .si(),		 					    .se());		 // Templated

   // fl));		 
      dff_ns #(1)  (.din(pre_rx_sync),
			   .clk(cmp_rclk),
			   .q(rx_sync));

   dff_ns #(1) tx_sync_ff (.din(pre_tx_sync),
			   .clk(cmp_rclk),
			   .q(tx_sync));

   
   /*****************************************************************
    * Test Stub
    *****************************************************************/
   /* test_stub_scan AUTO_TEMPLATE (
    // Outputs
    .mux_drive_disable  (),
    .mem_write_disable  (rst_tri_en),
    // Inputs
    .arst_l             (jbus_arst_l),
    ); */

   test_stub_scan test_stub_scan (.so_0	(so_0),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(long_chain_so_0),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io (.din(),
			   .clk(cmp_rclk),
			   .q(rx_sync));

   dff_ns #(1) tx_sync_ff (.din(pre_tx_sync),
			   .clk(cmp_rclk),
			   .q(tx_sync));

   
   /*****************************************************************
    * Test Stub
    *****************************************************************/
   /* test_stub_scan AUTO_TEMPLATE (
    // Outputs
    .mux_drive_disable  (),
    .mem_write_disable  (rst_tri_en),
    // Inputs
    .arst_l             (jbus_arst_l),
    ); */

   test_stub_scan test_stub_scan (.so_0	(so_0),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(long_chain_so_0),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
			   .clk(),
			   .q(rx_sync));

   dff_ns #(1) tx_sync_ff (.din(pre_tx_sync),
			   .clk(cmp_rclk),
			   .q(tx_sync));

   
   /*****************************************************************
    * Test Stub
    *****************************************************************/
   /* test_stub_scan AUTO_TEMPLATE (
    // Outputs
    .mux_drive_disable  (),
    .mem_write_disable  (rst_tri_en),
    // Inputs
    .arst_l             (jbus_arst_l),
    ); */

   test_stub_scan test_stub_scan (.so_0	(so_0),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(long_chain_so_0),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
			   .q());

   dff_ns #(1) tx_sync_ff (.din(pre_tx_sync),
			   .clk(cmp_rclk),
			   .q(tx_sync));

   
   /*****************************************************************
    * Test Stub
    *****************************************************************/
   /* test_stub_scan AUTO_TEMPLATE (
    // Outputs
    .mux_drive_disable  (),
    .mem_write_disable  (rst_tri_en),
    // Inputs
    .arst_l             (jbus_arst_l),
    ); */

   test_stub_scan test_stub_scan (.so_0	(so_0),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(long_chain_so_0),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io));

   dff_ns #(1)  (.din(pre_tx_sync),
			   .clk(cmp_rclk),
			   .q(tx_sync));

   
   /*****************************************************************
    * Test Stub
    *****************************************************************/
   /* test_stub_scan AUTO_TEMPLATE (
    // Outputs
    .mux_drive_disable  (),
    .mem_write_disable  (rst_tri_en),
    // Inputs
    .arst_l             (jbus_arst_l),
    ); */

   test_stub_scan test_stub_scan (.so_0	(so_0),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(long_chain_so_0),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io (.din(),
			   .clk(cmp_rclk),
			   .q(tx_sync));

   
   /*****************************************************************
    * Test Stub
    *****************************************************************/
   /* test_stub_scan AUTO_TEMPLATE (
    // Outputs
    .mux_drive_disable  (),
    .mem_write_disable  (rst_tri_en),
    // Inputs
    .arst_l             (jbus_arst_l),
    ); */

   test_stub_scan test_stub_scan (.so_0	(so_0),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(long_chain_so_0),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
			   .clk(),
			   .q(tx_sync));

   
   /*****************************************************************
    * Test Stub
    *****************************************************************/
   /* test_stub_scan AUTO_TEMPLATE (
    // Outputs
    .mux_drive_disable  (),
    .mem_write_disable  (rst_tri_en),
    // Inputs
    .arst_l             (jbus_arst_l),
    ); */

   test_stub_scan test_stub_scan (.so_0	(so_0),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(long_chain_so_0),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
			   .q());

   
   /*****************************************************************
    * Test Stub
    *****************************************************************/
   /* test_stub_scan AUTO_TEMPLATE (
    // Outputs
    .mux_drive_disable  (),
    .mem_write_disable  (rst_tri_en),
    // Inputs
    .arst_l             (jbus_arst_l),
    ); */

   test_stub_scan test_stub_scan (.so_0	(so_0),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(long_chain_so_0),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io));

   
   
   

   test_stub_scan  (.so_0	(so_0),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(long_chain_so_0),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io (.so_0	(),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(long_chain_so_0),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  .so_1	(),
				  .so_2	(),
				  .long_chain_so_0(),
				  .short_chain_so_0(short_chain_so_0),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  .short_chain_so_0(),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(testmode_l),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  .long_chain_so_1(),
				  .short_chain_so_1(),
				  .long_chain_so_2(),
				  .short_chain_so_2(),
				  .testmode_l(),
				  /*AUTOINST*/
				  // Outputs
				  .mux_drive_disable(),		 // Templated
				  .mem_write_disable(rst_tri_en), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  
				  				  .mux_drive_disable(),		 				  .mem_write_disable(), // Templated
				  .sehold(sehold),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io), 				  .sehold(),
				  .se	(se),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  .se	(),
				  .mem_bypass(mem_bypass),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  .mem_bypass(),
				  // Inputs
				  .ctu_tst_pre_grst_l(ctu_tst_pre_grst_l),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  				  .ctu_tst_pre_grst_l(),
				  .arst_l(jbus_arst_l),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  .arst_l(),		 // Templated
				  .global_shift_enable(global_shift_enable),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),		 				  .global_shift_enable(),
				  .ctu_tst_scan_disable(ctu_tst_scan_disable),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  .ctu_tst_scan_disable(),
				  .ctu_tst_scanmode(ctu_tst_scanmode),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  .ctu_tst_scanmode(),
				  .ctu_tst_macrotest(ctu_tst_macrotest),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  .ctu_tst_macrotest(),
				  .ctu_tst_short_chain(ctu_tst_short_chain));
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
				  .ctu_tst_short_chain());
   
   
   /*****************************************************************
    * cpu-to-io
    *****************************************************************/
   /* c2i AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   c2i c2i (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io));
   
   
   
   

   c2i  (/*AUTOINST*/
	    // Outputs
	    .bounce_ucb_sel		(bounce_ucb_sel),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io (
	    	    .bounce_ucb_sel		(),
	    .c2i_packet_is_rd_req	(c2i_packet_is_rd_req),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
	    .c2i_packet_is_rd_req	(),
	    .c2i_packet_is_wr_req	(c2i_packet_is_wr_req),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
	    .c2i_packet_is_wr_req	(),
	    .c2i_rd_nack_packet		(c2i_rd_nack_packet[`UCB_NOPAY_PKT_WIDTH-1:0]),
	    .cpu_buf_din_hi		(cpu_buf_din_hi[64:0]),
	    .cpu_buf_din_lo		(cpu_buf_din_lo[64:0]),
	    .cpu_buf_head_ptr		(cpu_buf_head_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_rd_l		(cpu_buf_rd_l),
	    .cpu_buf_tail_ptr		(cpu_buf_tail_ptr[`IOB_CPU_BUF_INDEX-1:0]),
	    .cpu_buf_wr_l		(cpu_buf_wr_l),
	    .cpu_mondo_wr_d2		(cpu_mondo_wr_d2),
	    .int_buf_din_raw		(int_buf_din_raw[159:0]),
	    .iob_clk_data		(iob_clk_data[`IOB_CLK_WIDTH-1:0]),
	    .iob_clk_vld		(iob_clk_vld),
	    .iob_dram02_data		(iob_dram02_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram02_vld		(iob_dram02_vld),
	    .iob_dram13_data		(iob_dram13_data[`IOB_DRAM_WIDTH-1:0]),
	    .iob_dram13_vld		(iob_dram13_vld),
	    .iob_int_ucb_sel		(iob_int_ucb_sel),
	    .iob_jbi_pio_data		(iob_jbi_pio_data[`IOB_JBI_WIDTH-1:0]),
	    .iob_jbi_pio_vld		(iob_jbi_pio_vld),
	    .iob_jbi_spi_data		(iob_jbi_spi_data[`IOB_SPI_WIDTH-1:0]),
	    .iob_jbi_spi_vld		(iob_jbi_spi_vld),
	    .iob_man_ucb_sel		(iob_man_ucb_sel),
	    .iob_pcx_stall_pq		(iob_pcx_stall_pq),
	    .iob_tap_stall		(iob_tap_stall),
	    .mondo_busy_addr_p0		(mondo_busy_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p1		(mondo_busy_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_addr_p2		(mondo_busy_addr_p2[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_busy_din_p1		(mondo_busy_din_p1),
	    .mondo_busy_din_p2		(mondo_busy_din_p2),
	    .mondo_busy_wr_p1		(mondo_busy_wr_p1),
	    .mondo_busy_wr_p2		(mondo_busy_wr_p2),
	    .mondo_data0_din_hi		(mondo_data0_din_hi[64:0]),
	    .mondo_data0_din_lo		(mondo_data0_din_lo[64:0]),
	    .mondo_data0_wr_hi_l	(mondo_data0_wr_hi_l),
	    .mondo_data0_wr_lo_l	(mondo_data0_wr_lo_l),
	    .mondo_data1_din_hi		(mondo_data1_din_hi[64:0]),
	    .mondo_data1_din_lo		(mondo_data1_din_lo[64:0]),
	    .mondo_data1_wr_hi_l	(mondo_data1_wr_hi_l),
	    .mondo_data1_wr_lo_l	(mondo_data1_wr_lo_l),
	    .mondo_data_addr_p0		(mondo_data_addr_p0[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_data_addr_p1		(mondo_data_addr_p1[`IOB_MONDO_DATA_INDEX-1:0]),
	    .mondo_source_din		(mondo_source_din[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .mondo_source_wr_l		(mondo_source_wr_l),
	    .rd_nack_ucb_sel		(rd_nack_ucb_sel),
	    .srvc_wr_ack		(srvc_wr_ack),
	    .tap_mondo_acc_addr_invld_d2_f(tap_mondo_acc_addr_invld_d2_f),
	    .tap_mondo_acc_seq_d2_f	(tap_mondo_acc_seq_d2_f),
	    .tap_mondo_dout_d2_f	(tap_mondo_dout_d2_f[63:0]),
	    .ucb_buf_acpt		(ucb_buf_acpt),
	    .wr_ack_io_buf_din		(wr_ack_io_buf_din[`IOB_IO_BUF_WIDTH-1:0]),
	    .cpu_mondo_rd_d2		(cpu_mondo_rd_d2),
	    .c2i_packet			(c2i_packet[`UCB_64PAY_PKT_WIDTH-1:0]),
	    .c2i_packet_vld		(c2i_packet_vld),
	    // Inputs
	    .bounce_ucb_buf_acpt	(bounce_ucb_buf_acpt),
	    .clk			(jbus_rclk),		 // Templated
	    .clk_iob_stall		(clk_iob_stall),
	    .cpu_buf_dout_hi		(cpu_buf_dout_hi[64:0]),
	    .cpu_buf_dout_lo		(cpu_buf_dout_lo[64:0]),
	    .cpu_clk			(cmp_rclk),		 // Templated
	    .cpu_rst_l			(cmp_rst_l),		 // Templated
	    .dram02_iob_stall		(dram02_iob_stall),
	    .dram13_iob_stall		(dram13_iob_stall),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .io_buf_avail		(io_buf_avail),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[`IOB_MONDO_DATA_WIDTH-1:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_MONDO_DATA_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_int_ucb_buf_acpt	(iob_int_ucb_buf_acpt),
	    .iob_man_ucb_buf_acpt	(iob_man_ucb_buf_acpt),
	    .jbi_iob_pio_stall		(jbi_iob_pio_stall),
	    .jbi_iob_spi_stall		(jbi_iob_spi_stall),
	    .mondo_busy_dout		(mondo_busy_dout),
	    .mondo_data0_dout_hi	(mondo_data0_dout_hi[64:0]),
	    .mondo_data0_dout_lo	(mondo_data0_dout_lo[64:0]),
	    .mondo_data1_dout_hi	(mondo_data1_dout_hi[64:0]),
	    .mondo_data1_dout_lo	(mondo_data1_dout_lo[64:0]),
	    .mondo_source_dout		(mondo_source_dout[`IOB_MONDO_SRC_WIDTH-1:0]),
	    .pcx_iob_data_px2		(pcx_iob_data_px2[`PCX_WIDTH-1:0]),
	    .pcx_iob_data_rdy_px2	(pcx_iob_data_rdy_px2),
	    .rd_nack_ucb_buf_acpt	(rd_nack_ucb_buf_acpt),
	    .rst_l			(rst_l),
	    .rx_sync			(rx_sync),
	    .tap_iob_data		(tap_iob_data[`TAP_IOB_WIDTH-1:0]),
	    .tap_iob_vld		(tap_iob_vld),
	    .tap_mondo_acc_addr_s	(tap_mondo_acc_addr_s[`IOB_ADDR_WIDTH-1:0]),
	    .tap_mondo_acc_seq_s	(tap_mondo_acc_seq_s),
	    .tap_mondo_din_s		(tap_mondo_din_s[63:0]),
	    .tap_mondo_wr_s		(tap_mondo_wr_s),
	    .tx_sync			(tx_sync));

   
   /*****************************************************************
    * io-to-cpu
    *****************************************************************/
   /* i2c AUTO_TEMPLATE (
    // Inputs
    .cpu_clk           (cmp_rclk),
    .clk               (jbus_rclk),
    .cpu_rst_l	       (cmp_rst_l),
    ); */

   i2c i2c (/*AUTOINST*/
	    // Outputs
	    .bounce_ack_rd		(bounce_ack_rd),
	    .int_buf_head_ptr		(int_buf_head_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_hit_hwm		(int_buf_hit_hwm),
	    .int_buf_tail_ptr		(int_buf_tail_ptr[`IOB_INT_BUF_INDEX-1:0]),
	    .int_buf_wr			(int_buf_wr),
	    .int_srvcd			(int_srvcd),
	    .io_buf_avail		(io_buf_avail),
	    .io_buf_din_raw		(io_buf_din_raw[159:0]),
	    .io_buf_head_ptr		(io_buf_head_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_tail_ptr		(io_buf_tail_ptr[`IOB_IO_BUF_INDEX-1:0]),
	    .io_buf_wr			(io_buf_wr),
	    .io_intman_addr		(io_intman_addr[`IOB_INT_TAB_INDEX-1:0]),
	    .io_mondo_data0_din_s	(io_mondo_data0_din_s[63:0]),
	    .io_mondo_data1_din_s	(io_mondo_data1_din_s[63:0]),
	    .io_mondo_data_wr_addr_s	(io_mondo_data_wr_addr_s[`IOB_CPUTHR_INDEX-1:0]),
	    .io_mondo_data_wr_s		(io_mondo_data_wr_s),
	    .io_mondo_source_din_s	(io_mondo_source_din_s[`JBI_IOB_MONDO_SRC_WIDTH-1:0]),
	    .iob_clk_stall		(iob_clk_stall),
	    .iob_cpx_data_ca		(iob_cpx_data_ca[`CPX_WIDTH-1:0]),
	    .iob_cpx_req_cq		(iob_cpx_req_cq[`IOB_CPU_WIDTH-1:0]),
	    .iob_dram02_stall		(iob_dram02_stall),
	    .iob_dram13_stall		(iob_dram13_stall),
	    .iob_int_ack_rd		(iob_int_ack_rd),
	    .iob_jbi_mondo_ack		(iob_jbi_mondo_ack),
	    .iob_jbi_mondo_nack		(io),
	    .c2i_rd_nack_packet		(