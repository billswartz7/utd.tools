
  			     
 

 

module tlu_tdp (
      tlu_pib_rsr_data_e, tlu_restore_pc_w1, tlu_restore_npc_w1, tlu_partial_trap_pc_w1,
   tsa_wdata, tlu_int_pstate_ie, local_pstate_ie, tlu_ifu_pstate_pef, 
   tlu_lsu_pstate_cle, tlu_lsu_pstate_priv, tlu_int_redmode, tlu_lsu_redmode, 
   tlu_sscan_test_data, 
      tlu_pstate_am, tlu_sftint_id, 
         tlu_dnrtry_global_g, tlu_tick_incr_din, tlu_exu_rsr_data_m, 
   tlu_hpstate_priv, local_hpstate_priv, local_hpstate_enb, local_pstate_priv, 
   tlu_hpstate_enb, tlu_hintp, tlu_por_rstint_g, tcl_hpstate_priv, tcl_hpstate_enb, 
   tlu_trap_hpstate_enb, tlu_hpstate_tlz, tlu_asi_state_e, tlu_hpstate_ibe, 
   so, 
      tsa_rdata, tlu_wsr_data_w, lsu_tlu_rsr_data_e, tlu_ibrkpt_trap_w2, 
      rclk, tlu_rst, tlu_thrd_wsel_w2, ifu_lsu_imm_asi_d,    tlu_final_ttype_w2, tlu_pstate_din_sel0, tlu_pstate_din_sel1, 
   tlu_pstate_din_sel2, tlu_pstate_din_sel3, ifu_lsu_imm_asi_vld_d,  
   lsu_asi_reg0, lsu_asi_reg1, lsu_asi_reg2, lsu_asi_reg3, 
   exu_tlu_ccr0_w, exu_tlu_ccr1_w, exu_tlu_ccr2_w, exu_tlu_ccr3_w, 
   exu_tlu_cwp0, exu_tlu_cwp1, exu_tlu_cwp2, exu_tlu_cwp3, tlu_trap_cwp_en, 
   tlu_pc_new_w, tlu_npc_new_w, tlu_sftint_en_l_g, tlu_sftint_mx_sel, 
   tlu_set_sftint_l_g, tlu_wr_tsa_inst_w2,  tlu_clr_sftint_l_g, 
   tlu_wr_sftint_l_g, tlu_sftint_penc_sel, tlu_tba_en_l, tlu_tick_en_l, 
   tlu_tickcmp_sel, tlu_tickcmp_en_l,    tlu_update_pc_l_w, tlu_tl_gt_0_w2, pib_pich_wrap,    tlu_select_tba_w2, tlu_select_redmode, tlu_update_pstate_l_w2, tlu_pil, 
   tlu_trp_lvl, tlu_tick_npt, tlu_thrd_rsel_e, tlu_tick_incr_dout, 
   tlu_rdpr_mx1_sel, tlu_rdpr_mx2_sel, tlu_rdpr_mx3_sel, tlu_rdpr_mx4_sel, 
   tlu_hpstate_din_sel0, tlu_hpstate_din_sel1, tlu_pc_mxsel_w2,  
   tlu_hpstate_din_sel2, tlu_hpstate_din_sel3, tlu_update_hpstate_l_w2, 
   tlu_htba_en_l, tlu_rdpr_mx5_sel, tlu_rdpr_mx6_sel, pib_picl_wrap, 
   tlu_rdpr_mx7_sel, tlu_htickcmp_intdis, tlu_stickcmp_en_l, tlu_htickcmp_en_l, 
   tlu_gl_lvl0, tlu_gl_lvl1, tlu_gl_lvl2, tlu_gl_lvl3, tlu_wr_hintp_g, 
   tlu_set_hintp_sel_g, ctu_sscan_tid, si, se
   );	


input	[-1:0] tsa_rdata;		   input   [-1:0] tlu_por_rstint_g;
input   [-1:0] tlu_wsr_data_w; 
input	[7:0]	lsu_tlu_rsr_data_e;	
input		rclk;			input tlu_rst;			           input [-1:0] tlu_thrd_wsel_w2;input [-1:0]	tlu_final_ttype_w2;	   input tlu_ibrkpt_trap_w2;	input tlu_trap_hpstate_enb;	input tlu_wr_tsa_inst_w2;	input [1:0]  tlu_pstate_din_sel0; input [1:0]  tlu_pstate_din_sel1; input [1:0]  tlu_pstate_din_sel2; input [1:0]  tlu_pstate_din_sel3; input [-1:0] lsu_asi_reg0; input [-1:0] lsu_asi_reg1; input [-1:0] lsu_asi_reg2; input [-1:0] lsu_asi_reg3; input [-1:0] ifu_lsu_imm_asi_d; input ifu_lsu_imm_asi_vld_d; 
input [3:0]	 tlu_tickcmp_sel;  input [3:0]	 tlu_tickcmp_en_l; input        tlu_tick_en_l;	   
input  [-1:0] pib_pich_wrap; 
input  [-1:0] pib_picl_wrap; 

input [7:0]  exu_tlu_ccr0_w;  input [7:0]  exu_tlu_ccr1_w;  input [7:0]  exu_tlu_ccr2_w;  input [7:0]  exu_tlu_ccr3_w;  input [2:0]  exu_tlu_cwp0;  input [2:0]  exu_tlu_cwp1;  input [2:0]  exu_tlu_cwp2;  input [2:0]  exu_tlu_cwp3;  input [-1:0] tlu_trap_cwp_en;
input [48:0] tlu_pc_new_w;	  input [48:0] tlu_npc_new_w;   
input [3:0]	 tlu_sftint_en_l_g; input [3:0]	 tlu_sftint_mx_sel; input        tlu_set_sftint_l_g;       input        tlu_clr_sftint_l_g;       input        tlu_wr_sftint_l_g;        input [3:0]	 tlu_sftint_penc_sel;
input [3:0]	 tlu_tba_en_l;		   input [3:0]	 tlu_update_pc_l_w;	   input [2:0] tlu_pc_mxsel_w2; 
input tlu_tl_gt_0_w2;	  input tlu_select_tba_w2;
input [-1:0] tlu_update_pstate_l_w2; input [-1:0] tlu_thrd_rsel_e; input [3:0] tlu_pil;     input [2:0] tlu_trp_lvl; 
input tlu_select_redmode;
input tlu_tick_npt;       
input [-4:0] tlu_tick_incr_dout;
input [1:0] tlu_hpstate_din_sel0; input [1:0] tlu_hpstate_din_sel1; input [1:0] tlu_hpstate_din_sel2; input [1:0] tlu_hpstate_din_sel3; input [-1:0] tlu_stickcmp_en_l; input [-1:0] tlu_htickcmp_en_l; input [-1:0] tlu_wr_hintp_g;    input [-1:0] tlu_set_hintp_sel_g; input [-1:0] tlu_htba_en_l;     input [-1:0] tlu_update_hpstate_l_w2; input tlu_htickcmp_intdis; input [-1:0] tlu_gl_lvl0; input [-1:0] tlu_gl_lvl1; input [-1:0] tlu_gl_lvl2; input [-1:0] tlu_gl_lvl3; input [3:1] tlu_rdpr_mx1_sel;
input [3:1] tlu_rdpr_mx2_sel;
input [2:1] tlu_rdpr_mx3_sel;
input [2:1] tlu_rdpr_mx4_sel;
input [3:1] tlu_rdpr_mx5_sel;
input [2:0] tlu_rdpr_mx6_sel;
input [3:0] tlu_rdpr_mx7_sel;
input [-1:0] ctu_sscan_tid;
input [-1:0] tlu_pib_rsr_data_e; 
input si; input se; 

output [48:0] tlu_restore_pc_w1;  output [48:0] tlu_restore_npc_w1; output [33:0] tlu_partial_trap_pc_w1;
output [-1:0] tlu_exu_rsr_data_m; output [-1:0] tsa_wdata; output [-1:0] tlu_int_pstate_ie;   output [-1:0] local_pstate_ie;   output [-1:0] tlu_ifu_pstate_pef;  output [-1:0] tlu_lsu_pstate_cle;  output [-1:0] tlu_lsu_pstate_priv; output [-1:0] tlu_int_redmode;	  output [-1:0] tlu_lsu_redmode;	  output [-1:0] tlu_pstate_am;   output [-1:0] tlu_hpstate_priv; output [-1:0] tlu_hpstate_enb;  output [-1:0] tlu_hpstate_tlz;  output [-1:0] tlu_hpstate_ibe;  output [-1:0] local_hpstate_priv; output [-1:0] tcl_hpstate_priv; output [-1:0] local_pstate_priv;  output [-1:0] local_hpstate_enb;  output [-1:0] tcl_hpstate_enb;  output [3:0] tlu_sftint_id;	
output [-3:0] tlu_tick_incr_din;
output [-1:0] tlu_dnrtry_global_g; output [-1:0]     tlu_hintp;
output [-1:0] tlu_asi_state_e;
output [-1:0] tlu_sscan_test_data;
output		  so; 

wire        ; // local reset
wire        se_l; // testmode_l replacement 
//
// rdpr muxe outputs
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx1_out;
wire [3:0]  tlu_rdpr_mx2_out;
wire [`SFTINT_WIDTH-1:0]  tlu_rdpr_mx3_out;
wire [`RDSR_TSTATE_WIDTH-1:0]  tlu_rdpr_mx4_out;
// 
// constructing one-hot selects
wire rdpr_mx1_onehot_sel, rdpr_mx2_onehot_sel; 
wire rdpr_mx3_onehot_sel, rdpr_mx4_onehot_sel; 
wire rdpr_mx5_onehot_sel, rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; wire        ; // testmode_l replacement 
//
// rdpr muxe outputs
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx1_out;
wire [3:0]  tlu_rdpr_mx2_out;
wire [`SFTINT_WIDTH-1:0]  tlu_rdpr_mx3_out;
wire [`RDSR_TSTATE_WIDTH-1:0]  tlu_rdpr_mx4_out;
// 
// constructing one-hot selects
wire rdpr_mx1_onehot_sel, rdpr_mx2_onehot_sel; 
wire rdpr_mx3_onehot_sel, rdpr_mx4_onehot_sel; 
wire rdpr_mx5_onehot_sel, rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; wire [-1:0] ;
wire [3:0]  tlu_rdpr_mx2_out;
wire [`SFTINT_WIDTH-1:0]  tlu_rdpr_mx3_out;
wire [`RDSR_TSTATE_WIDTH-1:0]  tlu_rdpr_mx4_out;
// 
// constructing one-hot selects
wire rdpr_mx1_onehot_sel, rdpr_mx2_onehot_sel; 
wire rdpr_mx3_onehot_sel, rdpr_mx4_onehot_sel; 
wire rdpr_mx5_onehot_sel, rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [3:0]  ;
wire [`SFTINT_WIDTH-1:0]  tlu_rdpr_mx3_out;
wire [`RDSR_TSTATE_WIDTH-1:0]  tlu_rdpr_mx4_out;
// 
// constructing one-hot selects
wire rdpr_mx1_onehot_sel, rdpr_mx2_onehot_sel; 
wire rdpr_mx3_onehot_sel, rdpr_mx4_onehot_sel; 
wire rdpr_mx5_onehot_sel, rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0]  ;
wire [`RDSR_TSTATE_WIDTH-1:0]  tlu_rdpr_mx4_out;
// 
// constructing one-hot selects
wire rdpr_mx1_onehot_sel, rdpr_mx2_onehot_sel; 
wire rdpr_mx3_onehot_sel, rdpr_mx4_onehot_sel; 
wire rdpr_mx5_onehot_sel, rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0]  ;
// 
// constructing one-hot selects
wire rdpr_mx1_onehot_sel, rdpr_mx2_onehot_sel; 
wire rdpr_mx3_onehot_sel, rdpr_mx4_onehot_sel; 
wire rdpr_mx5_onehot_sel, rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire , rdpr_mx2_onehot_sel; 
wire rdpr_mx3_onehot_sel, rdpr_mx4_onehot_sel; 
wire rdpr_mx5_onehot_sel, rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s, ; 
wire rdpr_mx3_onehot_sel, rdpr_mx4_onehot_sel; 
wire rdpr_mx5_onehot_sel, rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; 
wire , rdpr_mx4_onehot_sel; 
wire rdpr_mx5_onehot_sel, rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s, ; 
wire rdpr_mx5_onehot_sel, rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; 
wire , rdpr_mx6_onehot_sel; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s, ; 
//
wire  [32:0] true_tba0,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; 
wire  [32:0] ,true_tba1,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,true_tba2,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,true_tba3;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
wire  [60:0] true_tick;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [60:0] ;
// modified due to bug 3017
wire  [48:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [48:0] ,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,true_pc3;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
// wire  [47:0] sscan_pc; 
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test0;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [-1:0] ;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test1;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [-1:0] ;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test2;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [-1:0] ;
wire  [`TDP_SSCAN_WIDTH-1:0] sscan_data_test3;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [-1:0] ;
wire  [`TDP_SSCAN_WIDTH-1:0] tdp_sscan_test_data;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [-1:0] ;
wire  [`TLU_THRD_NUM-1:0] sscan_tid_sel; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [-1:0] ; 
wire  [48:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; 
wire  [48:0] ,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,true_npc2,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,true_npc3;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
// wire  [47:0] true_npc0,true_npc1,true_npc2,true_npc3;
// wire  [47:0] true_pc0,true_pc1,true_pc2,true_pc3;
// wire  [47:0] sscan_pc; 
// wire  [47:0] normal_trap_pc, normal_trap_npc;
//
// modified for hypervisor support
wire [`TLU_TSA_WIDTH-1:0] trap_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0] ;
wire [`TLU_TSA_WIDTH-1:0] trap0_tsa_wdata,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0] ,trap1_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
wire [`TLU_TSA_WIDTH-1:0] trap2_tsa_wdata,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0] ,trap3_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
wire [`TLU_TSA_WIDTH-1:0] wrpr_tsa_wdata;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0] ;
wire [`TLU_TSA_WIDTH-1:0] tsa_wdata;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0] ;
wire [`RDSR_TSTATE_WIDTH-1:0]  tstate_rdata;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0]  ;
wire [1:0]  tstate_dummy_zero;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [1:0]  ;
wire [`WSR_TSTATE_WIDTH-1:0]   compose_tstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0]   ;
wire [`TSA_HTSTATE_WIDTH-1:0]  compose_htstate;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0]  ;
wire [`TSA_GLOBAL_WIDTH-1:0]   global_rdata;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0]   ;	
// wire [`TLU_ASR_DATA_WIDTH-1:0] wsr_data_w;	
wire [`SFTINT_WIDTH-1:0] wsr_data_w;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;	
wire [-1:0] ;	
// reduced width to 48 due to lint violations
wire [47:0] wsr_data_w2;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;	
wire [47:0] ;	
//
// modified for bug 3017
// wire  [47:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
// wire  [47:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire  [48:2] trap_pc0,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;	
wire  [48:2] ,trap_pc1,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,trap_pc2,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,trap_pc3;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
wire  [48:2] trap_npc0,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [48:2] ,trap_npc1,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,trap_npc2,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,trap_npc3;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
wire   [7:0] trap_ccr0,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire   [7:0] ,trap_ccr1,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,trap_ccr2,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,trap_ccr3;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
wire   [7:0] trap_asi0,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire   [7:0] ,trap_asi1,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,trap_asi2,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,trap_asi3;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
wire   [2:0] trap_cwp0,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire   [2:0] ,trap_cwp1,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,trap_cwp2,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,trap_cwp3;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
wire   [2:0] tlu_cwp0,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire   [2:0] ,tlu_cwp1,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,tlu_cwp2,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,,tlu_cwp3;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s,;
wire   [`TLU_ASI_STATE_WIDTH-1:0] imm_asi_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire   [-1:0] ; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_reg_e; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; 
wire   [-1:0] ; 
wire   [`TLU_ASI_STATE_WIDTH-1:0] asi_state_final_e; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; 
wire   [-1:0] ; 
wire   imm_asi_vld_e;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; 
wire   ;
//
// modified due to tickcmp, stickcmp and sftint cleanup
// wire  [15:0] sftint0, sftint1, sftint2, sftint3;
// wire  [15:1] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire  [`SFTINT_WIDTH-1:0] sftint0, sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [-1:0] , sftint1, sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s, , sftint2, sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s, , sftint3;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s, ;
wire  [`SFTINT_WIDTH-1:0] sftint_set_din, sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire  [-1:0] , sftint_clr_din, sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s, , sftint_wr_din;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s, ;
wire [`SFTINT_WIDTH-1:0] sftint_din;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0] ;
wire [`SFTINT_WIDTH-1:0] sftint;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] sftint_b0_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0] ; 
wire [`TLU_THRD_NUM-1:0] sftint_b0_en;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; 
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] sftint_b15_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0] ; 
wire [`TLU_THRD_NUM-1:0] sftint_b15_en;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; 
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] sftint_b16_din; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s;
wire [-1:0] ; 
wire [`TLU_THRD_NUM-1:0] sftint_b16_en; 
wire [`TLU_THRD_NUM-1:0] s; 
wire [-1:0] ; 
wire [`TLU_THRD_NUM-1:0] s; 
wire [-1:0] ;
wire [3:0] sftin_din_mxsel;
// recoded for one-hot problem during reset
// wire sftint_sel_onehot_g;
//
// added for PIB support
wire	     tcmp0_clk, tcmp1_clk; 
wire	     tcmp2_clk, tcmp3_clk;
wire [14:0]  sftint_penc_din;
wire	     sftint0_clk,sftint1_clk;
wire	     sftint2_clk,sftint3_clk;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [3:0] ;
// recoded for one-hot problem during reset
// wire sftint_sel_onehot_g;
//
// added for PIB support
wire	     tcmp0_clk, tcmp1_clk; 
wire	     tcmp2_clk, tcmp3_clk;
wire [14:0]  sftint_penc_din;
wire	     sftint0_clk,sftint1_clk;
wire	     sftint2_clk,sftint3_clk;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire	     , tcmp1_clk; 
wire	     tcmp2_clk, tcmp3_clk;
wire [14:0]  sftint_penc_din;
wire	     sftint0_clk,sftint1_clk;
wire	     sftint2_clk,sftint3_clk;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ; 
wire	     tcmp2_clk, tcmp3_clk;
wire [14:0]  sftint_penc_din;
wire	     sftint0_clk,sftint1_clk;
wire	     sftint2_clk,sftint3_clk;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire	     , tcmp3_clk;
wire [14:0]  sftint_penc_din;
wire	     sftint0_clk,sftint1_clk;
wire	     sftint2_clk,sftint3_clk;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire [14:0]  sftint_penc_din;
wire	     sftint0_clk,sftint1_clk;
wire	     sftint2_clk,sftint3_clk;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [14:0]  ;
wire	     sftint0_clk,sftint1_clk;
wire	     sftint2_clk,sftint3_clk;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire	     ,sftint1_clk;
wire	     sftint2_clk,sftint3_clk;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
wire	     sftint2_clk,sftint3_clk;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire	     ,sftint3_clk;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
// 
wire [32:0] tba_data;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [32:0] ;
wire [32:0] tba_rdata;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [32:0] ;
wire [33:0] tlu_rstvaddr_base;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [33:0] ;
wire [`TLU_HTBA_WIDTH-1:0] htba_data;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire        tba0_clk,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire        ,tba1_clk,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,tba2_clk,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,tba3_clk;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
// modified for bug 3017
// wire [46:0] tsa_pc_m,tsa_npc_m;
// wire [48:0] dnrtry_pc,dnrtry_npc;
wire [48:0] restore_pc_w2;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [48:0] ;
wire [48:0] restore_npc_w2;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [48:0] ;
// wire [48:0]	pc_new, npc_new;
// wire [48:0]	pc_new_w, npc_new_w;
wire [33:0] partial_trap_pc_w2;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [33:0] ;
wire        pc0_clk,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire        ,pc1_clk,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,pc2_clk,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,pc3_clk;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
// wire [`TLU_TSA_WIDTH-1:0] tsa_data_m;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp0, true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] , true_tickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_tickcmp2, true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] , true_tickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire [`TLU_ASR_DATA_WIDTH-1:0] tickcmp_rdata;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] tickcmp_intdis_en;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] tickcmp_int;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] tlu_set_hintp_g;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] tlu_hintp_en_l_g;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire tlu_htick_match;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire ;	// htick to tick cmp match
wire tick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;	wire ;
wire [`TLU_ASR_DATA_WIDTH-4:0] tickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-4:0] ;
wire [`TLU_ASR_DATA_WIDTH-2:2] tick_din;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-2:2] ;
// reg	 [`TLU_ASR_DATA_WIDTH-1:0] tlu_rsr_data_e;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate0,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ,true_pstate1;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
wire [`PSTATE_TRUE_WIDTH-1:0] true_pstate2,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ,true_pstate3;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
// wire [`TLU_THRD_NUM-1:0] tlu_pstate_priv; // privilege mode
// added for hypervisor support 
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate0,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ,trap_pstate1;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
wire [`TSA_PSTATE_WIDTH-1:0] trap_pstate2,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ,trap_pstate3;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
//
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] dnrtry_pstate_m;	
// wire [`PSTATE_TRUE_WIDTH-1:0] wsr_data_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_m;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_g;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;	
wire [-1:0] ;	
wire [`WSR_PSTATE_VR_WIDTH-1:0] dnrtry_pstate_w2;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;	
wire [-1:0] ;
// removed for timing
// wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_g;
wire [`WSR_PSTATE_VR_WIDTH-1:0] wsr_data_pstate_w2;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;	
//
// modified for bug 1767
//wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate2;
// wire [`PSTATE_TRUE_WIDTH-1:0] ntrap_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;	
wire [-1:0] ;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate2;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`WSR_PSTATE_VR_WIDTH-1:0] ntrap_pstate3;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
// modified for bug 2161 and 2584
wire pstate_priv_set, hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire , hpstate_priv_set; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ; 
wire [`TLU_THRD_NUM-1:0] pstate_priv_thrd_set;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0] ;
// wire [`TLU_THRD_NUM-1:0] pstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] pstate_priv_update_w2;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
// wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_g;
wire [`TLU_THRD_NUM-1:0] hpstate_dnrtry_priv_w2;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] hpstate_enb_set;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] hpstate_ibe_set;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] hpstate_tlz_set;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
// wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_g;
wire [`TLU_THRD_NUM-1:0] hpstate_priv_update_w2;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
//
// removed for bug 2588
// wire [1:0] tlu_select_mmodel0;
// wire [1:0] tlu_select_mmodel1;
// wire [1:0] tlu_select_mmodel2;
// wire [1:0] tlu_select_mmodel3;
wire [`TLU_THRD_NUM-1:0] tlu_select_tle;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] tlu_select_cle;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
// wire [1:0] tlu_pstate0_mmodel;	// mem. model - thread0
// wire [1:0] tlu_pstate1_mmodel;	// mem. model - thread1
// wire [1:0] tlu_pstate2_mmodel;	// mem. model - thread2
// wire [1:0] tlu_pstate3_mmodel;	// mem. model - thread3
wire [`TLU_THRD_NUM-1:0] tlu_pstate_tle; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ; // trap little endian
//
// modified for bug 1575
// wire	[`PSTATE_TRUE_WIDTH-1:0]	restore_pstate;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate0;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate1;
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate2; 
// wire [`PSTATE_TRUE_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; wire [-1:0]	;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]	;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]	; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]	;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate0_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]	;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate1_w3;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]	;
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate2_w3; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]	; 
wire [`WSR_PSTATE_VR_WIDTH-1:0]	restore_pstate3_w3;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]	;
wire tlu_pstate_nt_sel0, tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire , tlu_pstate_nt_sel1;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire tlu_pstate_nt_sel2, tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire , tlu_pstate_nt_sel3;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire tlu_pstate_wsr_sel0, tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire , tlu_pstate_wsr_sel1;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire tlu_pstate_wsr_sel2, tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire , tlu_pstate_wsr_sel3;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire hpstate_redmode;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire ;
wire pstate0_clk,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire ,pstate1_clk,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,pstate2_clk,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,pstate3_clk;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;

//
// added or modified for hypervisor support
// wire	[2:0]   global_sel;	
wire stcmp0_clk, stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;

wire , stcmp1_clk, stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, , stcmp2_clk, stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, , stcmp3_clk;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire htcmp0_clk, htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire , htcmp1_clk, htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, , htcmp2_clk, htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, , htcmp3_clk;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire tlu_hpstate_hnt_sel0, tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire , tlu_hpstate_hnt_sel1;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire tlu_hpstate_hnt_sel2, tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire , tlu_hpstate_hnt_sel3;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire tlu_hpstate_wsr_sel0, tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire , tlu_hpstate_wsr_sel1;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire tlu_hpstate_wsr_sel2, tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire , tlu_hpstate_wsr_sel3;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire pc_bit15_sel;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire ;
wire htba0_clk,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire ,htba1_clk,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,htba2_clk,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,htba3_clk;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
wire hpstate0_clk,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire ,hpstate1_clk,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,hpstate2_clk,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,hpstate3_clk;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
wire hintp0_clk,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire ,hintp1_clk,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,hintp2_clk,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,,hintp3_clk;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
wire hintp_rdata;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire ;
wire [`TLU_THRD_NUM-1:0]       hintp_din;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]       ;
// added or modified due to stickcmp clean-up
// wire [`TLU_ASR_DATA_WIDTH-2:0] stickcmp_rdata;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp0, true_stickcmp1;
// wire [`TLU_ASR_DATA_WIDTH-2:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_ASR_DATA_WIDTH-1:0] stickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp0, true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] , true_stickcmp1;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire [`TLU_ASR_DATA_WIDTH-1:0] true_stickcmp2, true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] , true_stickcmp3;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_din;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_THRD_NUM-1:0] stickcmp_intdis_en; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ; 
wire [`TLU_THRD_NUM-1:0] stickcmp_int; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0] ; 
wire stick_match;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire ;
wire [`TLU_ASR_DATA_WIDTH-4:0] stickcmp_data;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-4:0] ;
//
wire [`TLU_ASR_DATA_WIDTH-2:0] htickcmp_rdata;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-2:0] ;
wire [`TLU_ASR_DATA_WIDTH-4:0] htickcmp_data;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-4:0] ;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp0, true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-2:0] , true_htickcmp1;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire [`TLU_ASR_DATA_WIDTH-2:0] true_htickcmp2, true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-2:0] , true_htickcmp3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate0,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]  ,true_hpstate1;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate2,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]  ,true_hpstate3;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================,;
wire [`TLU_HPSTATE_WIDTH-1:0]  true_hpstate;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]  ;
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_m; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]  ; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_g; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]  ; 
wire [`TSA_HTSTATE_WIDTH-1:0]  tsa_dnrtry_hpstate_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]  ; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_g, dnrtry_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate0_w2, dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]  , dnrtry_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_g, dnrtry_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  dnrtry_hpstate2_w2, dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]  , dnrtry_hpstate3_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_g, hntrap_hpstate1_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate0_w2, hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]  , hntrap_hpstate1_w2; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ; 
// wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_g, hntrap_hpstate3_g; 
wire [`TLU_HPSTATE_WIDTH-1:0]  hntrap_hpstate2_w2, hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]  , hntrap_hpstate3_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ; 
wire [`TLU_HPSTATE_WIDTH-1:0]  wsr_data_hpstate_w2; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]  ; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate0, restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]  , restore_hpstate1; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ; 
wire [`TLU_HPSTATE_WIDTH-1:0]  restore_hpstate2, restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]  , restore_hpstate3; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ; 
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba0, true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 
wire [-1:0]	   , true_htba1;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire [`TLU_HTBA_WIDTH-1:0]	   true_htba2, true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]	   , true_htba3;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================, ;
wire [`TSA_GLOBAL_WIDTH-1:0]   dnrtry_global_m;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]   ;	
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx5_out;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;	
wire [-1:0] ;
wire [`SFTINT_WIDTH-1:0]       tlu_rdpr_mx6_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0]       ;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_rdpr_mx7_out;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire [`TLU_ASR_DATA_WIDTH-1:0] tlu_exu_rsr_data_e;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire [-1:0] ;
wire clk; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
wire ; 
//
//=========================================================================================
// create local reset

assign local_rst = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================; 

assign  = tlu_rst;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//=========================== = ;
assign se_l = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;
assign  = ~se;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//=========================== = ~;

// clock rename
assign clk = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;

assign  = rclk;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//=========================== = ;

//=========================================================================================
// Design Notes :
// HTSTATE-	       4 (ENB from HPSTATE is not saved)	
// TPC-		      47 (48-2)VA+(1)VA_HOLE
// TNPC-		  47 (48-2)VA+(1)VA_HOLE
// TSTATE.GL-	   2 (Only two significant bits are saved)
// TSTATE.CCR-     8
// TSTATE.ASI-	   8
// TSTATE.PSTATE-  8 (RED, IG, MG and AG bits are not used)
// TSTATE.CWP-	   3
// TRAPTYPE-	   9
//===========================;






assign  [48:2] =  [48:2];
assign  [48:2] =  [48:2];
assign  [48:2] =  [48:2];
assign  [48:2] =  [48:2];

assign  [48:2] = [48:2]; 
assign  [48:2] = [48:2];
assign  [48:2] = [48:2];
assign  [48:2] = [48:2];

assign	[7:0] = [7:0];
assign	[7:0] = [7:0];
assign	[7:0] = [7:0];
assign	[7:0] = [7:0];

dff_s #(3)  (
    .din (exu_tlu_cwp0[2:0]),
    .q   (tlu_cwp0[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp1 (
    .din (exu_tlu_cwp1[2:0]),
    .q   (tlu_cwp1[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp2 (
    .din (exu_tlu_cwp2[2:0]),
    .q   (tlu_cwp2[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp3 (
    .din (exu_tlu_cwp3[2:0]),
    .q   (tlu_cwp3[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3 (
    .din ([2:0]),
    .q   ([2:0]),
    .clk (),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp1 (
    .din (exu_tlu_cwp1[2:0]),
    .q   (tlu_cwp1[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp2 (
    .din (exu_tlu_cwp2[2:0]),
    .q   (tlu_cwp2[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp3 (
    .din (exu_tlu_cwp3[2:0]),
    .q   (tlu_cwp3[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),
    .se  (),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp1 (
    .din (exu_tlu_cwp1[2:0]),
    .q   (tlu_cwp1[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp2 (
    .din (exu_tlu_cwp2[2:0]),
    .q   (tlu_cwp2[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp3 (
    .din (exu_tlu_cwp3[2:0]),
    .q   (tlu_cwp3[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),       
    .si  (),          
    .so  ()
);

dff_s #(3)  (
    .din (exu_tlu_cwp1[2:0]),
    .q   (tlu_cwp1[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp2 (
    .din (exu_tlu_cwp2[2:0]),
    .q   (tlu_cwp2[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp3 (
    .din (exu_tlu_cwp3[2:0]),
    .q   (tlu_cwp3[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3 (
    .din ([2:0]),
    .q   ([2:0]),
    .clk (),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp2 (
    .din (exu_tlu_cwp2[2:0]),
    .q   (tlu_cwp2[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp3 (
    .din (exu_tlu_cwp3[2:0]),
    .q   (tlu_cwp3[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),
    .se  (),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp2 (
    .din (exu_tlu_cwp2[2:0]),
    .q   (tlu_cwp2[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp3 (
    .din (exu_tlu_cwp3[2:0]),
    .q   (tlu_cwp3[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),       
    .si  (),          
    .so  ()
);

dff_s #(3)  (
    .din (exu_tlu_cwp2[2:0]),
    .q   (tlu_cwp2[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp3 (
    .din (exu_tlu_cwp3[2:0]),
    .q   (tlu_cwp3[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3 (
    .din ([2:0]),
    .q   ([2:0]),
    .clk (),
    .se  (se),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp3 (
    .din (exu_tlu_cwp3[2:0]),
    .q   (tlu_cwp3[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),
    .se  (),       
    .si  (),          
    .so  ()
);

dff_s #(3) dff_tlu_cwp3 (
    .din (exu_tlu_cwp3[2:0]),
    .q   (tlu_cwp3[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),       
    .si  (),          
    .so  ()
);

dff_s #(3)  (
    .din (exu_tlu_cwp3[2:0]),
    .q   (tlu_cwp3[2:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3 (
    .din ([2:0]),
    .q   ([2:0]),
    .clk (),
    .se  (se),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),
    .se  (),       
    .si  (),          
    .so  ()
);
// 
// modified for bug 3499 and 3695
dffe_s #(3) dffe_trap_cwp0 (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),       
    .si  (),          
    .so  ()
);
dffe_s #(3)  (
    // .din (exu_tlu_cwp0[2:0]),
    .din (tlu_cwp0[2:0]),
    .q   (trap_cwp0[2:0]),
    .en  (tlu_trap_cwp_en[0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3 (
        .din ([2:0]),
    .q   ([2:0]),
    .en  ([0]),
    .clk (),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),
    .se  (),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp1 (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),       
    .si  (),          
    .so  ()
);

dffe_s #(3)  (
    // .din (exu_tlu_cwp1[2:0]),
    .din (tlu_cwp1[2:0]),
    .q   (trap_cwp1[2:0]),
    .en  (tlu_trap_cwp_en[1]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3 (
        .din ([2:0]),
    .q   ([2:0]),
    .en  ([1]),
    .clk (),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),
    .se  (),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp2 (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),       
    .si  (),          
    .so  ()
);

dffe_s #(3)  (
    // .din (exu_tlu_cwp2[2:0]),
    .din (tlu_cwp2[2:0]),
    .q   (trap_cwp2[2:0]),
    .en  (tlu_trap_cwp_en[2]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3 (
        .din ([2:0]),
    .q   ([2:0]),
    .en  ([2]),
    .clk (),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),
    .se  (),       
    .si  (),          
    .so  ()
);

dffe_s #(3) dffe_trap_cwp3 (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),       
    .si  (),          
    .so  ()
);

dffe_s #(3)  (
    // .din (exu_tlu_cwp3[2:0]),
    .din (tlu_cwp3[2:0]),
    .q   (trap_cwp3[2:0]),
    .en  (tlu_trap_cwp_en[3]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3 (
        .din ([2:0]),
    .q   ([2:0]),
    .en  ([3]),
    .clk (),
    .se  (se),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),
    .se  (),       
    .si  (),          
    .so  ()
);

assign	trap_asi0[7:0] = lsu_asi_reg0[7:0];
assign	trap_asi1[7:0] = lsu_asi_reg1[7:0];
assign	trap_asi2[7:0] = lsu_asi_reg2[7:0];
assign	trap_asi3[7:0] = lsu_asi_reg3[7:0];
// 
// staging the immediate asi

dff_s #(`TLU_ASI_STATE_WIDTH) dff_imm_asi_e (
    .din (ifu_lsu_imm_asi_d[`TLU_ASI_STATE_WIDTH-1:0]),
    .q   (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
    .clk (clk),
    .se  (se),       
    .si  (),          
    .so  ()
);

dffr_s dffr_imm_asi_vld_e (
     .din (ifu_lsu_imm_asi_vld_d),
     .q   (imm_asi_vld_e),
     .clk (clk),
	 .rst (local_rst),
     .se  (se),
     .si  (),
     .so  ()
);
//
// generating the current asi state
mux4ds  #(`TLU_ASI_STATE_WIDTH) mx_tlu_asi_state_e (
        .in0    (lsu_asi_reg0[`TLU_ASI_STATE_WIDTH-1:0]),
        .in1    (lsu_asi_reg1[`TLU_ASI_STATE_WIDTH-1:0]),
        .in2    (lsu_asi_reg2[`TLU_ASI_STATE_WIDTH-1:0]),
        .in3    (lsu_asi_reg3[`TLU_ASI_STATE_WIDTH-1:0]),
        .sel0   (tlu_thrd_rsel_e[0]),
        .sel1   (tlu_thrd_rsel_e[1]),
        .sel2   (tlu_thrd_rsel_e[2]),
        .sel3   (tlu_thrd_rsel_e[3]),
        // modified due to bug 2442
        // .dout   (tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0])
        .dout   (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0])
); 
//
// added for bug 2442
// generating the current asi state
mux2ds #(`TLU_ASI_STATE_WIDTH) mx_asi_state_final_e (
       .in0  (imm_asi_e[`TLU_ASI_STATE_WIDTH-1:0]),
	   .in1  (asi_state_reg_e[`TLU_ASI_STATE_WIDTH-1:0]),
       .sel0 (imm_asi_vld_e),  	
	   .sel1 (~imm_asi_vld_e),
       .dout (asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0])
); 

assign tlu_asi_state_e[`TLU_ASI_STATE_WIDTH-1:0] =
           asi_state_final_e[`TLU_ASI_STATE_WIDTH-1:0];
//
// thread 0
assign trap_pstate0 = {
       true_pstate0[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate0[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap0_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate0[`TLU_HPSTATE_WIDTH-1],
        true_hpstate0[`TSA_HTSTATE_WIDTH-2:0]};
//
// modified for bug 3017
//
assign trap0_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc0[48:2];
//
assign trap0_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc0[48:2];
//
assign trap0_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl0[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr0[`TSA_CCR_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi0[`TSA_ASI_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate0[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp0[`TSA_CWP_WIDTH-1:0]; 
//
assign trap0_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 1
assign trap_pstate1 = {
       true_pstate1[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate1[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap1_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate1[`TLU_HPSTATE_WIDTH-1],
        true_hpstate1[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap1_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc1[48:2];
//
assign trap1_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc1[48:2];
//
assign trap1_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl1[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr1[`TSA_CCR_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi1[`TSA_ASI_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate1[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp1[`TSA_CWP_WIDTH-1:0]; 
//
assign trap1_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 2
assign trap_pstate2 = {
       true_pstate2[`PSTATE_VRANGE2_HI:`PSTATE_VRANGE2_LO], 
       2'b0, true_pstate2[`PSTATE_VRANGE1_HI:`PSTATE_VRANGE1_LO]};
//
// modified due to hpstate.ibe addition
assign trap2_tsa_wdata[`TLU_HTSTATE_HI:`TLU_HTSTATE_LO] = 
       {true_hpstate2[`TLU_HPSTATE_WIDTH-1],
        true_hpstate2[`TSA_HTSTATE_WIDTH-2:0]};
//
assign trap2_tsa_wdata[`TLU_PC_HI:`TLU_PC_LO] = 
           trap_pc2[48:2];
//
assign trap2_tsa_wdata[`TLU_NPC_HI:`TLU_NPC_LO] = 
           trap_npc2[48:2];
//
assign trap2_tsa_wdata[`TLU_GL_HI:`TLU_GL_LO] = 
       tlu_gl_lvl2[`TSA_GLOBAL_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CCR_HI:`TLU_CCR_LO] = 
       trap_ccr2[`TSA_CCR_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_ASI_HI:`TLU_ASI_LO] = 
       trap_asi2[`TSA_ASI_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_PSTATE_HI:`TLU_PSTATE_LO] = 
       trap_pstate2[`TSA_PSTATE_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_CWP_HI:`TLU_CWP_LO] = 
       trap_cwp2[`TSA_CWP_WIDTH-1:0]; 
//
assign trap2_tsa_wdata[`TLU_TT_HI:`TLU_TT_LO] = 
       tlu_final_ttype_w2[`TSA_TTYPE_WIDTH-1:0]; 
//
// thread 3
assign trap_pstate3 = {
       true_pstate3),       
    .si  (),          
    .so  ()
);

assign	[7:0] = [7:0];
assign	[7:0] = [7:0];
assign	[7:0] = [7:0];
assign	[7:0] = [7:0];

dff_s #()