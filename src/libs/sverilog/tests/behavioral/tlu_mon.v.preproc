
 

																			
module tlu_mon(
	clk, 
	grst_l,
	rst_l,
	lsu_ifu_flush_pipe_w,
	tlu_lsu_int_ldxa_vld_w2,
    tlu_lsu_int_ld_ill_va_w2,
	tlu_scpd_wr_vld_g,
	cpu_mondo_head_wr_g,
	cpu_mondo_tail_wr_g,
	dev_mondo_head_wr_g,
	dev_mondo_tail_wr_g,
	resum_err_head_wr_g,
	resum_err_tail_wr_g,
	nresum_err_head_wr_g,
	nresum_err_tail_wr_g,
	ifu_lsu_ld_inst_e,
	ifu_lsu_st_inst_e,
	ifu_lsu_alt_space_e,
	tlu_early_flush_pipe_w,
	tlu_asi_state_e,
	exu_lsu_ldst_va_e,
	por_rstint0_w2,
	por_rstint1_w2,
	por_rstint2_w2,
	por_rstint3_w2,
	tlu_gl_lvl0,
	tlu_gl_lvl1,
	tlu_gl_lvl2,
	tlu_gl_lvl3,
	exu_gl_lvl0,
	exu_gl_lvl1,
	exu_gl_lvl2,
	exu_gl_lvl3,
	ifu_tlu_thrid_d, 
	ifu_tlu_inst_vld_m, 
	ifu_tlu_imiss_e, 
	ifu_tlu_immu_miss_m,
	ifu_tlu_flush_fd_w,
	tlu_thread_inst_vld_g, 
	tlu_thread_wsel_g, 
	ifu_tlu_l2imiss, 
	ifu_tlu_sraddr_d,
	ifu_tlu_rsr_inst_d, 
	lsu_tlu_wsr_inst_e, 
	tlu_wsr_inst_nq_g, 
	tlu_wsr_data_w,
	lsu_tlu_dcache_miss_w2, 
	lsu_tlu_l2_dmiss, 
	lsu_tlu_stb_full_w2, 
	lsu_tlu_dmmu_miss_g,
	ffu_tlu_fpu_tid, 
	ffu_tlu_fpu_cmplt, 
	tlu_pstate_priv,
	tlu_hpstate_priv, 
	tlu_hpstate_enb, 
	tlu_pstate_ie, 
	wsr_thread_inst_g,
	lsu_tlu_defr_trp_taken_g, 
	lsu_tlu_async_ttype_vld_w1, 
	lsu_tlu_ttype_vld_m2,
	tlu_ifu_flush_pipe_w, 
	tlu_pib_rsr_data_e, 
	tlu_pib_priv_act_trap_m, 
	tlu_pib_picl_wrap, 
	tlu_pib_pich_wrap, 
	tlu_ifu_trappc_vld_w1, 
	tlu_ifu_trappc_w2, 
	tlu_final_ttype_w2, 
	tlu_ifu_trap_tid_w1, 
	tlu_full_flush_pipe_w2,
	rtl_pcr0, 
	rtl_pcr1, 
	rtl_pcr2, 
	rtl_pcr3,
	rtl_lsu_tlu_stb_full_w2, 
	rtl_fpu_cmplt_thread, 
	rtl_imiss_thread_g, 
	rtl_lsu_tlu_dcache_miss_w2, 
	rtl_immu_miss_thread_g, 
	rtl_dmmu_miss_thread_g, 
	rtl_ifu_tlu_l2imiss, 
	rtl_lsu_tlu_l2_dmiss,
	true_pil0, 
	true_pil1, 
	true_pil2, 
	true_pil3,
	rtl_trp_lvl0, 
	rtl_trp_lvl1, 
	rtl_trp_lvl2, 
	rtl_trp_lvl3,
	tcc_inst_w2,
        rtl_pich_cnt0, 
	rtl_pich_cnt1, 
	rtl_pich_cnt2, 
	rtl_pich_cnt3,
        rtl_picl_cnt0, 
	rtl_picl_cnt1, 
	rtl_picl_cnt2, 
	rtl_picl_cnt3,
	tlz_thread,
	th0_sftint_15,
	th1_sftint_15,
	th2_sftint_15,
	th3_sftint_15,
	ifu_swint_g,
	core_id,
	tlu_itlb_wr_vld_g,
	tlu_itlb_dmp_vld_g,
	tlu_itlb_tte_tag_w2,
	tlu_itlb_tte_data_w2,
	itlb_wr_vld,
	dtlb_wr_vld,
	tlu_tlb_access_en_l_d1,
	tlu_lng_ltncy_en_l
	);

    input		clk;
  input		grst_l;
  input		rst_l;

    input lsu_ifu_flush_pipe_w;
  input tlu_lsu_int_ldxa_vld_w2;
  input tlu_lsu_int_ld_ill_va_w2;
  input tlu_scpd_wr_vld_g;
  input [3:0]	cpu_mondo_head_wr_g;
  input [3:0]	cpu_mondo_tail_wr_g;
  input [3:0]	dev_mondo_head_wr_g;
  input [3:0]	dev_mondo_tail_wr_g;
  input [3:0]	resum_err_head_wr_g;
  input [3:0]	resum_err_tail_wr_g;
  input [3:0]	nresum_err_head_wr_g;
  input [3:0]	nresum_err_tail_wr_g;
  input			ifu_lsu_ld_inst_e;
  input			ifu_lsu_st_inst_e;
  input			ifu_lsu_alt_space_e;
  input			tlu_early_flush_pipe_w;
  input	[7:0]	tlu_asi_state_e;
  input	[47:0]	exu_lsu_ldst_va_e;
    input			por_rstint0_w2;
  input			por_rstint1_w2;
  input			por_rstint2_w2;
  input			por_rstint3_w2;
  input	[1:0]	tlu_gl_lvl0;
  input	[1:0]	tlu_gl_lvl1;
  input	[1:0]	tlu_gl_lvl2;
  input	[1:0]	tlu_gl_lvl3;
  input	[1:0]	exu_gl_lvl0;
  input	[1:0]	exu_gl_lvl1;
  input	[1:0]	exu_gl_lvl2;
  input	[1:0]	exu_gl_lvl3;
    input [1:0]	ifu_tlu_thrid_d;
  input		ifu_tlu_inst_vld_m;
  input		ifu_tlu_imiss_e;
  input		ifu_tlu_immu_miss_m;
  input [3:0]	tlu_thread_inst_vld_g;
  input [3:0]	tlu_thread_wsel_g;
  input [3:0]	ifu_tlu_l2imiss;
  input		ifu_tlu_flush_fd_w;

    input [6:0]	ifu_tlu_sraddr_d;
  input		ifu_tlu_rsr_inst_d;
  input		lsu_tlu_wsr_inst_e;
  input		tlu_wsr_inst_nq_g;
    input [63:0]	tlu_wsr_data_w;

    input [3:0]	lsu_tlu_dcache_miss_w2;
  input [3:0]	lsu_tlu_l2_dmiss;
  input [3:0]	lsu_tlu_stb_full_w2;
  input		lsu_tlu_dmmu_miss_g;

    input [1:0]	ffu_tlu_fpu_tid;
  input		ffu_tlu_fpu_cmplt;

    input [3:0]	tlu_pstate_priv;
  input [3:0]	tlu_hpstate_priv;
  input [3:0]	tlu_hpstate_enb;
  input [3:0]	tlu_pstate_ie;
  input [3:0]	wsr_thread_inst_g;
  input 	lsu_tlu_defr_trp_taken_g;
  input 	lsu_tlu_async_ttype_vld_w1;
  input 	lsu_tlu_ttype_vld_m2;
  input 	tlu_ifu_flush_pipe_w;
  input		tcc_inst_w2;

    input [63:0]	tlu_pib_rsr_data_e;
  input [3:0]	tlu_pib_priv_act_trap_m;
    input [3:0]	tlu_pib_picl_wrap;
  input [3:0]	tlu_pib_pich_wrap;
  
    input		tlu_ifu_trappc_vld_w1;
  input [48:0]	tlu_ifu_trappc_w2;
  input [8:0]	tlu_final_ttype_w2;
  input [1:0]	tlu_ifu_trap_tid_w1;
  input		tlu_full_flush_pipe_w2;
  
      input [7:0] rtl_pcr0;
  input [7:0] rtl_pcr1;
  input [7:0] rtl_pcr2;
  input [7:0] rtl_pcr3;
  input [32:0] rtl_pich_cnt0;
  input [32:0] rtl_pich_cnt1;
  input [32:0] rtl_pich_cnt2;
  input [32:0] rtl_pich_cnt3;
  input [32:0] rtl_picl_cnt0;
  input [32:0] rtl_picl_cnt1;
  input [32:0] rtl_picl_cnt2;
  input [32:0] rtl_picl_cnt3;

  input [3:0] rtl_lsu_tlu_stb_full_w2;
  input [3:0] rtl_fpu_cmplt_thread;
  input [3:0] rtl_imiss_thread_g;
  input [3:0] rtl_lsu_tlu_dcache_miss_w2;
  input [3:0] rtl_immu_miss_thread_g;
  input [3:0] rtl_dmmu_miss_thread_g;
  input [3:0] rtl_ifu_tlu_l2imiss;
  input [3:0] rtl_lsu_tlu_l2_dmiss;

  input [3:0] true_pil0;
  input [3:0] true_pil1;
  input [3:0] true_pil2;
  input [3:0] true_pil3;

  input	[2:0]	rtl_trp_lvl0; 
  input	[2:0]	rtl_trp_lvl1; 
  input	[2:0]	rtl_trp_lvl2; 
  input	[2:0]	rtl_trp_lvl3;

  input [3:0] tlz_thread;
  input       th0_sftint_15;
  input       th1_sftint_15;
  input       th2_sftint_15;
  input       th3_sftint_15;
  input       ifu_swint_g;
  input [2:0] core_id;

    input        tlu_itlb_wr_vld_g;
  input        tlu_itlb_dmp_vld_g;
  input [58:0] tlu_itlb_tte_tag_w2;
  input [42:0] tlu_itlb_tte_data_w2;

      input        itlb_wr_vld;
  input        dtlb_wr_vld;
  input        tlu_tlb_access_en_l_d1;
  input        tlu_lng_ltncy_en_l;

      wire [3:0]	;
  wire [2:0]	rtl_trp_lvl_g;
  wire [3:0]	imiss_thread_g;
  wire [3:0]	immu_miss_thread_g;
  wire [3:0]	dmmu_miss_thread_g;
  wire [3:0]	fpu_cmplt_thread;

  wire [3:0]	thread_rsel_d;
  wire		pcr_rsel_d;
  wire		pcr_rw_e;
  wire		pic_priv_rw_e;
  wire		pic_npriv_rw_e;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [2:0]	;
  wire [3:0]	imiss_thread_g;
  wire [3:0]	immu_miss_thread_g;
  wire [3:0]	dmmu_miss_thread_g;
  wire [3:0]	fpu_cmplt_thread;

  wire [3:0]	thread_rsel_d;
  wire		pcr_rsel_d;
  wire		pcr_rw_e;
  wire		pic_priv_rw_e;
  wire		pic_npriv_rw_e;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;
  wire [3:0]	immu_miss_thread_g;
  wire [3:0]	dmmu_miss_thread_g;
  wire [3:0]	fpu_cmplt_thread;

  wire [3:0]	thread_rsel_d;
  wire		pcr_rsel_d;
  wire		pcr_rw_e;
  wire		pic_priv_rw_e;
  wire		pic_npriv_rw_e;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;
  wire [3:0]	dmmu_miss_thread_g;
  wire [3:0]	fpu_cmplt_thread;

  wire [3:0]	thread_rsel_d;
  wire		pcr_rsel_d;
  wire		pcr_rw_e;
  wire		pic_priv_rw_e;
  wire		pic_npriv_rw_e;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;
  wire [3:0]	fpu_cmplt_thread;

  wire [3:0]	thread_rsel_d;
  wire		pcr_rsel_d;
  wire		pcr_rw_e;
  wire		pic_priv_rw_e;
  wire		pic_npriv_rw_e;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;

  wire [3:0]	thread_rsel_d;
  wire		pcr_rsel_d;
  wire		pcr_rw_e;
  wire		pic_priv_rw_e;
  wire		pic_npriv_rw_e;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);

  wire [3:0]	;
  wire		pcr_rsel_d;
  wire		pcr_rw_e;
  wire		pic_priv_rw_e;
  wire		pic_npriv_rw_e;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire		;
  wire		pcr_rw_e;
  wire		pic_priv_rw_e;
  wire		pic_npriv_rw_e;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire		;
  wire		pic_priv_rw_e;
  wire		pic_npriv_rw_e;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire		;
  wire		pic_npriv_rw_e;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire		;
  wire [3:0]	wsr_pcr_sel;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;
  wire [3:0]	wsr_pic_sel;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;
  wire [3:0]	pib_priv_act_trap_m;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;
  wire [1:0]	pic_update_sel_incr;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [1:0]	;
  wire [3:0]	upd_picl_sel;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;
  wire [3:0]	pic_cnt_en;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;
  wire [3:0]	incr_pich_sel;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;
  wire [32:0]	pich_cnt_sum0;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [32:0]	;
  wire [32:0]	pich_cnt_sum1;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [32:0]	;
  wire [32:0]	pich_cnt_sum2;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [32:0]	;
  wire [32:0]	pich_cnt_sum3;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [32:0]	;
  wire [7:0]	picl_mask0;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [7:0]	;
  wire [7:0]	picl_mask1;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [7:0]	;
  wire [7:0]	picl_mask2;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [7:0]	;
  wire [7:0]	picl_mask3;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [7:0]	;
  wire [7:0]	picl_event0;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [7:0]	;
  wire [7:0]	picl_event1;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [7:0]	;
  wire [7:0]	picl_event2;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [7:0]	;
  wire [7:0]	picl_event3;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [7:0]	;
  wire [3:0]	incr_evq_din;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]	;
  wire [3:0]    pib_picl_wrap;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]    ;
  wire [3:0]    pib_pich_wrap;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]    ;
  wire [3:0]    pich_twobelow_flg;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [3:0]    ;

  wire [63:0]	pcr_rdata_e;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);

  wire [63:0]	;
  wire [63:0]	pic_rdata_e;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [63:0]	;
  wire [63:0]   pib_rsr_data_e;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [63:0]   ;
  wire [63:0]	pcr_w1;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [63:0]	;

  wire		pic_ovfl_trappc_vld_g;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);

  wire		;
  wire [13:0]	pic_ovfl_trappc_g;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire [13:0]	;  // Note: need to change to 48 bits, anf generate at m-state
  wire [8:0]	pic_ovfl_ttype_w1 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);    wire [8:0]	 = 9'h4f;
  wire		defr_trap_taken;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id) = 9hh;
  wire		;
  wire		flushed_thrd_w1;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire		;
  wire	[3:0]	thrd_sel_g;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire	[3:0]	;
  wire	[3:0]	thrd_sel_w1;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire	[3:0]	;

  wire	[7:0]	mon_pcr0;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);

  wire	[7:0]	;
  wire	[7:0]	mon_pcr1;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire	[7:0]	;
  wire	[7:0]	mon_pcr2;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire	[7:0]	;
  wire	[7:0]	mon_pcr3;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire	[7:0]	;

  wire		swint_15_g;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);

  wire		;

  // to make sure tlu_itlb_tte_tag, tlu_itlb_tte_data held constant for at least two cycles
  wire		tlu_itlb_wr_vld_rise;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);

    wire		;
  wire		tlu_itlb_dmp_vld_rise;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire		;
  wire		tlu_itlb_wr_dmp_error;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire		;

  wire		same_thrd_g_w1;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);

  wire		;
  wire		same_thrd_w1_w2;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
  wire		;

  reg		tlu_itlb_wr_vld_g_d1;
  reg		tlu_itlb_dmp_vld_g_d1;
  reg		tlu_itlb_wr_vld_rise_d1;
  reg		tlu_itlb_dmp_vld_rise_d1;
  reg [58:0]	tlu_itlb_tte_tag_w2_d1;
  reg [42:0]	tlu_itlb_tte_data_w2_d1;

  reg		tlu_tlb_access_en_l_d1_delay;
  reg		tlu_lng_ltncy_en_l_delay;
  wire		tlu_idtlb_wr_error;

  // Local registers
  reg		enable;
  reg	[63:0]	pcr0;
  reg	[63:0]	pcr1;
  reg	[63:0]	pcr2;
  reg	[63:0]	pcr3;
  reg	[32:0]	picl_cnt0;
  reg	[32:0]	picl_cnt1;
  reg	[32:0]	picl_cnt2;
  reg	[32:0]	picl_cnt3;
  reg	[32:0]	pich_cnt0;
  reg	[32:0]	pich_cnt1;
  reg	[32:0]	pich_cnt2;
  reg	[32:0]	pich_cnt3;
  reg	[32:0]	picl_cnt_sum0;
  reg	[32:0]	picl_cnt_sum1;
  reg	[32:0]	picl_cnt_sum2;
  reg	[32:0]	picl_cnt_sum3;

  reg [1:0]	thrid_e;
  reg [1:0]	thrid_m;
  reg [1:0]	thrid_g;
  reg [1:0]	thrid_w1;
  reg [1:0]	thrid_w2;
  reg [1:0]	thrid_w2_dly;
  reg		inst_vld_g;
  reg		inst_vld_w1;
  reg [3:0]	thread_rsel_e, thread_rsel_m, thread_rsel_g, thread_rsel_w1;
  reg		pcr_rsel_e;
  reg [6:0]	ifu_tlu_sraddr_e;
  reg		ifu_tlu_rsr_inst_e;
  reg		pcr_rw_m;
  reg		pic_priv_rw_m;
  reg		pic_npriv_rw_m;
  reg		pcr_rw_g;
  reg		pic_priv_rw_g;
  reg		pic_npriv_rw_g;
  reg		imiss_m;
  reg		imiss_g;
  reg		immu_miss_g;
  reg [1:0]	pic_update_sel_ctr;
  reg [3:0]	pic_cnt_en_w2;
  reg [3:0]	inst_vld_w2;
  reg [3:0]	incr_evq;
  reg [3:0]     picl_cnt_wrap;
  reg [3:0]     pich_cnt_wrap;
  reg [3:0]     picl_wrap_pend;

  reg [8:0]	pic_ovfl_ttype_g;
  reg		pic_ovfl_trappc_vld_w1;
  reg		pic_ovfl_trappc_vld_w2;
  reg		pic_ovfl_trappc_vld_w2_dly;
  reg [13:0]	pic_ovfl_trappc_w1;
  reg [13:0]	pic_ovfl_trappc_w2; // Note: need to change to 48 bits, anf generate at m-state
  reg [13:0]	pic_ovfl_trappc_w2_dly;
  reg		delay_pic_ovfl_trappc;
  reg [3:0]	pic_ovfl_trap_pending;
  reg 		lsu_tlu_defr_trp_taken_w1;
  reg 		tlu_ifu_flush_pipe_w1;
  reg		swint_15_w1;

  reg		sim_fail;

  reg		lsu_ifu_flush_pipe_w1;
  reg		lsu_ifu_flush_pipe_w2;
//////////////////////////////////////////////////////////////////////
// GL Monitor to hunt for bug7084 ////////////////////////////////////
reg	por0_done;
reg	por1_done;
reg	por2_done;
reg	por3_done;
always @(posedge clk)
	if ( ~grst_l )				por0_done <= 1'b0;
	else if ( por_rstint0_w2 )	por0_done <= 1'b1;
	else						por0_done <= por0_done;

always @(posedge clk)
	if ( ~grst_l )				por1_done <= 1'b0;
	else if ( por_rstint1_w2 )	por1_done <= 1'b1;
	else						por1_done <= por1_done;

always @(posedge clk)
	if ( ~grst_l )				por2_done <= 1'b0;
	else if ( por_rstint2_w2 )	por2_done <= 1'b1;
	else						por2_done <= por2_done;

always @(posedge clk)
	if ( ~grst_l )				por3_done <= 1'b0;
	else if ( por_rstint3_w2 )	por3_done <= 1'b1;
	else						por3_done <= por3_done;

always @(posedge clk) begin
	if ((por0_done === 1'b1)  && (tlu_gl_lvl0 !== exu_gl_lvl0)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl0, exu_gl_lvl0);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por1_done === 1'b1)  && (tlu_gl_lvl1 !== exu_gl_lvl1)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT1: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl1, exu_gl_lvl1);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por2_done === 1'b1)  && (tlu_gl_lvl2 !== exu_gl_lvl2)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT2: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl2, exu_gl_lvl2);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
	if ((por3_done === 1'b1)  && (tlu_gl_lvl3 !== exu_gl_lvl3)) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT3: TLU's GL[%0x] != EXU's GL[%0x]", $time, core_id, tlu_gl_lvl3, exu_gl_lvl3);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7084 ");
	end
end

/////////// END of GL(bug7084) Monitor ////////////////////////
/////////// Start of bug77148 Monitor ////////////////////////
always @(posedge clk) begin
  lsu_ifu_flush_pipe_w1 <= lsu_ifu_flush_pipe_w;
  lsu_ifu_flush_pipe_w2 <= lsu_ifu_flush_pipe_w1;
end

assign same_thrd_g_w1 = (thrid_g === thrid_w1) ? 1'b1 : 1'b0;
assign same_thrd_w1_w2 = (thrid_w1 === thrid_w2) ? 1'b1 : 1'b0;

always @(posedge clk) begin
  if (lsu_ifu_flush_pipe_w2 & tlu_lsu_int_ldxa_vld_w2 & same_thrd_w1_w2 & ~tlu_lsu_int_ld_ill_va_w2) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/ldxa case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148  st/ldxa case");
  end
  if (lsu_ifu_flush_pipe_w1 & tlu_scpd_wr_vld_g & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0d: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & cpu_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & dev_mondo_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & resum_err_tail_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);
		`MONITOR_PATH.fail("tlu_mon: Hit bug7148 st/stxa[scratchpad] case");
  end
  if (lsu_ifu_flush_pipe_w1 & nresum_err_head_wr_g[0] & same_thrd_g_w1) begin
		$display("*ERROR*: %0d : tlu_mon: C%0dT0: has hit bug7148 st/stxa[scratchpad] case", $time, core_id);

  reg