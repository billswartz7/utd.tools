module dram_ctl_edgelogic(
      ctl_pad_clk_so, to_pad, 
      clk, rst_l, ctl_pad_clk_se, ctl_pad_clk_si, data, testmode_l
   );

input			clk;
input			rst_l;
input			testmode_l;
input			ctl_pad_clk_se;
input			ctl_pad_clk_si;
input			data;

output			ctl_pad_clk_so;
output			to_pad;


wire  = testmode_l ? ~clk : clk;

// INSTANTIATING PAD LOGIC

dffrl_s #(1) flop_data(
		.din(data),
		.q(to_pad),
		.rst_l(rst_l),
		.clk(tclk), .si(ctl_pad_clk_si), .so(ctl_pad_clk_so), .se(ctl_pad_clk_se));

endmodule
 =  ? ~clk : clk;

// INSTANTIATING PAD LOGIC

dffrl_s #(1) flop_data(
		.din(data),
		.q(to_pad),
		.rst_l(rst_l),
		.clk(tclk), .si(ctl_pad_clk_si), .so(ctl_pad_clk_so), .se(ctl_pad_clk_se));

endmodule
 ? ~ : clk;

// INSTANTIATING PAD LOGIC

dffrl_s #(1) flop_data(
		.din(data),
		.q(to_pad),
		.rst_l(rst_l),
		.clk(tclk), .si(ctl_pad_clk_si), .so(ctl_pad_clk_so), .se(ctl_pad_clk_se));

endmodule
 : ;

// INSTANTIATING PAD LOGIC

dffrl_s #(1) flop_data(
		.din(data),
		.q(to_pad),
		.rst_l(rst_l),
		.clk(tclk), .si(ctl_pad_clk_si), .so(ctl_pad_clk_so), .se(ctl_pad_clk_se));

endmodule
;


dffrl_s #(1) (
		.din(data),
		.q(to_pad),
		.rst_l(rst_l),
		.clk(tclk), .si(ctl_pad_clk_si), .so(ctl_pad_clk_so), .se(ctl_pad_clk_se));

endmodule
(
		.din(),
		.q(to_pad),
		.rst_l(rst_l),
		.clk(tclk), .si(ctl_pad_clk_si), .so(ctl_pad_clk_so), .se(ctl_pad_clk_se));

endmodule
),
		.q(),
		.rst_l(rst_l),
		.clk(tclk), .si(ctl_pad_clk_si), .so(ctl_pad_clk_so), .se(ctl_pad_clk_se));

endmodule
),
		.rst_l(),
		.clk(tclk), .si(ctl_pad_clk_si), .so(ctl_pad_clk_so), .se(ctl_pad_clk_se));

endmodule
),
		.clk(), .si(ctl_pad_clk_si), .so(ctl_pad_clk_so), .se(ctl_pad_clk_se));

endmodule
), .si(), .so(ctl_pad_clk_so), .se(ctl_pad_clk_se));

endmodule
), .so(), .se(ctl_pad_clk_se));

endmodule
), .se());

endmodule
));

endmodule
