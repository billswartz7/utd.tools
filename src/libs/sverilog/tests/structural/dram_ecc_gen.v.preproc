

module dram_ecc_gen (
      data,
      result,
   ecc
   );

input [127:0] data;

output [111:0] result;
output [15:0] ecc;
 

wire [3:0]	;
wire [3:0]	w1;
wire [3:0]	w2;
wire [3:0]	w3;
wire [3:0]	w4;
wire [3:0]	w5;
wire [3:0]	w6;
wire [3:0]	w7;
wire [3:0]	w8;
wire [3:0]	w9;
wire [3:0]	w10;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w2;
wire [3:0]	w3;
wire [3:0]	w4;
wire [3:0]	w5;
wire [3:0]	w6;
wire [3:0]	w7;
wire [3:0]	w8;
wire [3:0]	w9;
wire [3:0]	w10;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w3;
wire [3:0]	w4;
wire [3:0]	w5;
wire [3:0]	w6;
wire [3:0]	w7;
wire [3:0]	w8;
wire [3:0]	w9;
wire [3:0]	w10;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w4;
wire [3:0]	w5;
wire [3:0]	w6;
wire [3:0]	w7;
wire [3:0]	w8;
wire [3:0]	w9;
wire [3:0]	w10;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w5;
wire [3:0]	w6;
wire [3:0]	w7;
wire [3:0]	w8;
wire [3:0]	w9;
wire [3:0]	w10;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w6;
wire [3:0]	w7;
wire [3:0]	w8;
wire [3:0]	w9;
wire [3:0]	w10;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w7;
wire [3:0]	w8;
wire [3:0]	w9;
wire [3:0]	w10;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w8;
wire [3:0]	w9;
wire [3:0]	w10;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w9;
wire [3:0]	w10;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w10;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w11;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w12;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w13;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w14;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w15;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w16;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w17;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w18;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w19;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w20;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w21;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w22;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w23;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w24;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w25;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w26;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w27;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w28;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w29;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w30;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	w31;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;

//wire [3:0]	pw0;
wire [3:0]	pw1;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;

wire [3:0]	;
wire [3:0]	pw2;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw3;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw4;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw5;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw6;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw7;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw8;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw9;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw10;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw11;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw12;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw13;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw14;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
//wire [3:0]	pw15;
wire [3:0]	pw16;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw17;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw18;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw19;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw20;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw21;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw22;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw23;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw24;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw25;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw26;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw27;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw28;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw29;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
//wire [3:0]	pw30;
//wire [3:0]	pw31;

wire [3:0]	pw_1;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;

wire [3:0]	;
wire [3:0]	pw_2;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_3;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_4;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_5;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_6;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_7;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_8;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_9;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_10;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_11;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_12;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_13;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_14;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_16;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_17;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_18;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_19;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_20;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_21;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_22;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_23;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_24;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_25;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_26;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_27;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_28;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;
wire [3:0]	pw_29;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;
wire [3:0]	;

///////////////////////////////
////// Code Begins Here ///////
///////////////////////////////

assign w0[3:0]  = data[3:0];
assign w1[3:0]  = data[7:4];
assign w2[3:0]  = data[11:8];
assign w3[3:0]  = data[15:12];
assign w4[3:0]  = data[19:16];
assign w5[3:0]  = data[23:20];
assign w6[3:0]  = data[27:24];
assign w7[3:0]  = data[31:28];
assign w8[3:0]  = data[35:32];
assign w9[3:0]  = data[39:36];
assign w10[3:0] = data[43:40];
assign w11[3:0] = data[47:44];
assign w12[3:0] = data[51:48];
assign w13[3:0] = data[55:52];
assign w14[3:0] = data[59:56];
assign w15[3:0] = data[63:60];
assign w16[3:0] = data[67:64];
assign w17[3:0] = data[71:68];
assign w18[3:0] = data[75:72];
assign w19[3:0] = data[79:76];
assign w20[3:0] = data[83:80];
assign w21[3:0] = data[87:84];
assign w22[3:0] = data[91:88];
assign w23[3:0] = data[95:92];
assign w24[3:0] = data[99:96];
assign w25[3:0] = data[103:100];
assign w26[3:0] = data[107:104];
assign w27[3:0] = data[111:108];
assign w28[3:0] = data[115:112];
assign w29[3:0] = data[119:116];
assign w30[3:0] = data[123:120];
assign w31[3:0] = data[127:124];

/////////////////////////////
/// Galois Multiplication by 4
/////////////////////////////

// 2*w1

assign pw1[0] = w1[3]; 
assign pw1[1] = w1[0] ^ w1[3];
assign pw1[2] = w1[1];
assign pw1[3] = w1[2]; 

// 3*w2

assign pw2[0] = w2[0] ^ w2[3];
assign pw2[1] = w2[0] ^ w2[3] ^ w2[1];
assign pw2[2] = w2[1] ^ w2[2];
assign pw2[3] = w2[2] ^ w2[3];

// 4*w3

assign pw3[0] = w3[2];
assign pw3[1] = w3[3] ^ w3[2]; 
assign pw3[2] = w3[0] ^ w3[3];
assign pw3[3] = w3[1];

// 5*w4

assign pw4[0] = w4[2] ^ w4[0];
assign pw4[1] = w4[3] ^ w4[2] ^ w4[1];
assign pw4[2] = w4[0] ^ w4[3] ^ w4[2];
assign pw4[3] = w4[1] ^ w4[3];

// 6*w5

assign pw5[0] = w5[2] ^ w5[3];
assign pw5[1] = w5[2] ^ w5[0];
assign pw5[2] = w5[0] ^ w5[3] ^ w5[1];
assign pw5[3] = w5[1] ^ w5[2];

// 7*w6

assign pw6[0] = w6[2] ^ w6[3] ^ w6[0];
assign pw6[1] = w6[2] ^ w6[0] ^ w6[1];
assign pw6[2] = w6[0] ^ w6[3] ^ w6[1] ^ w6[2];
assign pw6[3] = w6[1] ^ w6[2] ^ w6[3];

// 8*w7

assign pw7[0] = w7[1];
assign pw7[1] = w7[2] ^ w7[1];
assign pw7[2] = w7[3] ^ w7[2];
assign pw7[3] = w7[0] ^ w7[3];

// 9*w8

assign pw8[0] = w8[1] ^ w8[0];
assign pw8[1] = w8[2];
assign pw8[2] = w8[3];
assign pw8[3] = w8[0];

// a*w9

assign pw9[0] = w9[1] ^ w9[3];
assign pw9[1] = w9[2] ^ w9[1] ^ w9[0] ^ w9[3];
assign pw9[2] = w9[3] ^ w9[2] ^ w9[1];
assign pw9[3] = w9[0] ^ w9[3] ^ w9[2];

// b*w10

assign pw10[0] = w10[1] ^ w10[0] ^ w10[3];
assign pw10[1] = w10[2] ^ w10[0] ^ w10[3];
assign pw10[2] = w10[3] ^ w10[1];
assign pw10[3] = w10[0] ^ w10[2];

// c*w11

assign pw11[0] = w11[1] ^ w11[2];
assign pw11[1] = w11[3] ^ w11[1];
assign pw11[2] = w11[0] ^ w11[2];
assign pw11[3] = w11[0] ^ w11[3] ^ w11[1];

// d*w12

assign pw12[0] = w12[1] ^ w12[2] ^ w12[0];
assign pw12[1] = w12[3];
assign pw12[2] = w12[0];
assign pw12[3] = w12[0] ^ w12[1];

// e*w13

assign pw13[0] = w13[1] ^ w13[2] ^ w13[3];
assign pw13[1] = w13[1] ^ w13[0];
assign pw13[2] = w13[0] ^ w13[2] ^ w13[1];
assign pw13[3] = w13[0] ^ w13[3] ^ w13[1] ^ w13[2];

// f*w14

assign pw14[0] = w14[1] ^ w14[2] ^ w14[3] ^ w14[0];
assign pw14[1] = w14[0];
assign pw14[2] = w14[0] ^ w14[1];
assign pw14[3] = w14[0] ^ w14[1] ^ w14[2];

// 1*w15

//assign pw15[3:0] = w15[3:0];

// 2*w16

assign pw16[0] = w16[3];
assign pw16[1] = w16[0] ^ w16[3];
assign pw16[2] = w16[1];
assign pw16[3] = w16[2];

// 3*w17

assign pw17[0] = w17[0] ^ w17[3];
assign pw17[1] = w17[0] ^ w17[3] ^ w17[1];
assign pw17[2] = w17[1] ^ w17[2];
assign pw17[3] = w17[2] ^ w17[3];

// 4*w18

assign pw18[0] = w18[2];
assign pw18[1] = w18[3] ^ w18[2];
assign pw18[2] = w18[0] ^ w18[3];
assign pw18[3] = w18[1];

// 5*w19

assign pw1;


assign [3:0]  = [3:0];
assign [3:0]  = [7:4];
assign [3:0]  = [11:8];
assign [3:0]  = [15:12];
assign [3:0]  = [19:16];
assign [3:0]  = [23:20];
assign [3:0]  = [27:24];
assign [3:0]  = [31:28];
assign [3:0]  = [35:32];
assign [3:0]  = [39:36];
assign [3:0] = [43:40];
assign [3:0] = [47:44];
assign [3:0] = [51:48];
assign [3:0] = [55:52];
assign [3:0] = [59:56];
assign [3:0] = [63:60];
assign [3:0] = [67:64];
assign [3:0] = [71:68];
assign [3:0] = [75:72];
assign [3:0] = [79:76];
assign [3:0] = [83:80];
assign [3:0] = [87:84];
assign [3:0] = [91:88];
assign [3:0] = [95:92];
assign [3:0] = [99:96];
assign [3:0] = [103:100];
assign [3:0] = [107:104];
assign [3:0] = [111:108];
assign [3:0] = [115:112];
assign [3:0] = [119:116];
assign [3:0] = [123:120];
assign [3:0] = [127:124];



assign [0] = [3]; 
assign [1] = [0] ^ [3];
assign [2] = [1];
assign [3] = [2]; 


assign [0] = [0] ^ [3];
assign [1] = [0] ^ [3] ^ [1];
assign [2] = [1] ^ [2];
assign [3] = [2] ^ [3];


assign [0] = [2];
assign [1] = [3] ^ [2]; 
assign [2] = [0] ^ [3];
assign [3] = [1];


assign [0] = [2] ^ [0];
assign [1] = [3] ^ [2] ^ [1];
assign [2] = [0] ^ [3] ^ [2];
assign [3] = [1] ^ [3];


assign [0] = [2] ^ [3];
assign [1] = [2] ^ [0];
assign [2] = [0] ^ [3] ^ [1];
assign [3] = [1] ^ [2];


assign [0] = [2] ^ [3] ^ [0];
assign [1] = [2] ^ [0] ^ [1];
assign [2] = [0] ^ [3] ^ [1] ^ [2];
assign [3] = [1] ^ [2] ^ [3];


assign [0] = [1];
assign [1] = [2] ^ [1];
assign [2] = [3] ^ [2];
assign [3] = [0] ^ [3];


assign [0] = [1] ^ [0];
assign [1] = [2];
assign [2] = [3];
assign [3] = [0];


assign [0] = [1] ^ [3];
assign [1] = [2] ^ [1] ^ [0] ^ [3];
assign [2] = [3] ^ [2] ^ [1];
assign [3] = [0] ^ [3] ^ [2];


assign [0] = [1] ^ [0] ^ [3];
assign [1] = [2] ^ [0] ^ [3];
assign [2] = [3] ^ [1];
assign [3] = [0] ^ [2];


assign [0] = [1] ^ [2];
assign [1] = [3] ^ [1];
assign [2] = [0] ^ [2];
assign [3] = [0] ^ [3] ^ [1];


assign [0] = [1] ^ [2] ^ [0];
assign [1] = [3];
assign [2] = [0];
assign [3] = [0] ^ [1];


assign [0] = [1] ^ [2] ^ [3];
assign [1] = [1] ^ [0];
assign [2] = [0] ^ [2] ^ [1];
assign [3] = [0] ^ [3] ^ [1] ^ [2];


assign [0] = [1] ^ [2] ^ [3] ^ [0];
assign [1] = [0];
assign [2] = [0] ^ [1];
assign [3] = [0] ^ [1] ^ [2];




assign [0] = [3];
assign [1] = [0] ^ [3];
assign [2] = [1];
assign [3] = [2];


assign [0] = [0] ^ [3];
assign [1] = [0] ^ [3] ^ [1];
assign [2] = [1] ^ [2];
assign [3] = [2] ^ [3];


assign [0] = [2];
assign [1] = [3] ^ [2];
assign [2] = [0] ^ [3];
assign [3] = [1];


assign [0] = [2] ^ [0];
assign [1] = [3] ^ [2] ^ [1];
assign [2] = [0] ^ [3] ^ [2];
assign [3] = [1] ^ [3];


assign [0] = [2] ^ [3];
assign [1] = [2] ^ [0];
assign [2] = [0] ^ [3] ^ [1];
assign [3] = [1] ^ [2];


assign [0] = [2] ^ [3] ^ [0];
assign [1] = [2] ^ [0] ^ [1];
assign [2] = [0] ^ [3] ^ [1] ^ [2];
assign [3] = [1] ^ [2] ^ [3];


assign [0] = [1];
assign [1] = [2] ^ [1];
assign [2] = [3] ^ [2];
assign [3] = [0] ^ [3];


assign [0] = [1] ^ [0];
assign [1] = [2];
assign [2] = [3];
assign [3] = [0];


assign [0] = [1] ^ [3];
assign [1] = [2] ^ [1] ^ [0] ^ [3];
assign [2] = [3] ^ [2] ^ [1];
assign [3] = [0] ^ [3] ^ [2];


assign [0] = [1] ^ [0] ^ [3];
assign [1] = [2] ^ [0] ^ [3];
assign [2] = [3] ^ [1];
assign [3] = [0] ^ [2];


assign [0] = [1] ^ [2];
assign [1] = [3] ^ [1];
assign [2] = [0] ^ [2];
assign [3] = [0] ^ [3] ^ [1];


assign [0] = [1] ^ [2] ^ [0];
assign [1] = [3];
assign [2] = [0];
assign [3] = [0] ^ [1];


assign [0] = [1] ^ [2] ^ [3];
assign [1] = [1] ^ [0];
assign [2] = [0] ^ [2] ^ [1];
assign [3] = [0] ^ [3] ^ [1] ^ [2];


assign [0] = [1] ^ [2] ^ [3] ^ [0];
assign [1] = [0];
assign [2] = [0] ^ [1];
assign [3] = [0] ^ [1] ^ [2];
 






assign [0] = [3]; 
assign [1] = [0] ^ [3];
assign [2] = [1];
assign [3] = [2]; 


assign [0] = [0] ^ [3];
assign [1] = [0] ^ [3] ^ [1];
assign [2] = [1] ^ [2];
assign [3] = [2] ^ [3];


assign [0] = [2];
assign [1] = [3] ^ [2]; 
assign [2] = [0] ^ [3];
assign [3] = [1];


assign [0] = [2] ^ [0];
assign [1] = [3] ^ [2] ^ [1];
assign [2] = [0] ^ [3] ^ [2];
assign [3] = [1] ^ [3];


assign [0] = [2] ^ [3];
assign [1] = [2] ^ [0];
assign [2] = [0] ^ [3] ^ [1];
assign [3] = [1] ^ [2];


assign [0] = [2] ^ [3] ^ [0];
assign [1] = [2] ^ [0] ^ [1];
assign [2] = [0] ^ [3] ^ [1] ^ [2];
assign [3] = [1] ^ [2] ^ [3];


assign [0] = [1];
assign [1] = [2] ^ [1];
assign [2] = [3] ^ [2];
assign [3] = [0] ^ [3];


assign [0] = [1] ^ [0];
assign [1] = [2];
assign [2] = [3];
assign [3] = [0];


assign [0] = [1] ^ [3];
assign [1] = [2] ^ [1] ^ [0] ^ [3];
assign [2] = [3] ^ [2] ^ [1];
assign [3] = [0] ^ [3] ^ [2];


assign [0] = [1] ^ [0] ^ [3];
assign [1] = [2] ^ [0] ^ [3];
assign [2] = [3] ^ [1];
assign [3] = [0] ^ [2];


assign [0] = [1] ^ [2];
assign [1] = [3] ^ [1];
assign [2] = [0] ^ [2];
assign [3] = [0] ^ [3] ^ [1];


assign [0] = [1] ^ [2] ^ [0];
assign [1] = [3];
assign [2] = [0];
assign [3] = [0] ^ [1];


assign [0] = [1] ^ [2] ^ [3];
assign [1] = [1] ^ [0];
assign [2] = [0] ^ [2] ^ [1];
assign [3] = [0] ^ [3] ^ [1] ^ [2];


assign [0] = [1] ^ [2] ^ [3] ^ [0];
assign [1] = [0];
assign [2] = [0] ^ [1];
assign [3] = [0] ^ [1] ^ [2];


assign [0] = [3]; 
assign [1] = [0] ^ [3];
assign [2] = [1];
assign [3] = [2]; 


assign [0] = [0] ^ [3];
assign [1] = [0] ^ [3] ^ [1];
assign [2] = [1] ^ [2];
assign [3] = [2] ^ [3];


assign [0] = [2];
assign [1] = [3] ^ [2]; 
assign [2] = [0] ^ [3];
assign [3] = [1];


assign [0] = [2] ^ [0];
assign [1] = [3] ^ [2] ^ [1];
assign [2] = [0] ^ [3] ^ [2];
assign [3] = [1] ^ [3];


assign [0] = [2] ^ [3];
assign [1] = [2] ^ [0];
assign [2] = [0] ^ [3] ^ [1];
assign [3] = [1] ^ [2];


assign [0] = [2] ^ [3] ^ [0];
assign [1] = [2] ^ [0] ^ [1];
assign [2] = [0] ^ [3] ^ [1] ^ [2];
assign [3] = [1] ^ [2] ^ [3];


assign [0] = [1];
assign [1] = [2] ^ [1];
assign [2] = [3] ^ [2];
assign [3] = [0] ^ [3];


assign [0] = [1] ^ [0];
assign [1] = [2];
assign [2] = [3];
assign [3] = [0];


assign [0] = [1] ^ [3];
assign [1] = [2] ^ [1] ^ [0] ^ [3];
assign [2] = [3] ^ [2] ^ [1];
assign [3] = [0] ^ [3] ^ [2];


assign [0] = [1] ^ [0] ^ [3];
assign [1] = [2] ^ [0] ^ [3];
assign [2] = [3] ^ [1];
assign [3] = [0] ^ [2];


assign [0] = [1] ^ [2];
assign [1] = [3] ^ [1];
assign [2] = [0] ^ [2];
assign [3] = [0] ^ [3] ^ [1];


assign [0] = [1] ^ [2] ^ [0];
assign [1] = [3];
assign [2] = [0];
assign [3] = [0] ^ [1];


assign [0] = [1] ^ [2] ^ [3];
assign [1] = [1] ^ [0];
assign [2] = [0] ^ [2] ^ [1];
assign [3] = [0] ^ [3] ^ [1] ^ [2];


assign [0] = [1] ^ [2] ^ [3] ^ [0];
assign [1] = [0];
assign [2] = [0] ^ [1];
assign [3] = [0] ^ [1] ^ [2];


wire [3:0]	;
wire [3:0]	p3_partialsum;
wire [3:0]	syndrom0;
wire [3:0]	syndrom1;
wire [3:0]	syndrom2;
wire [3:0]	syndrom3;

// partial sum
assign partialsum[3:0] = pw1 ^ pw2 ^ pw3 ^ pw4 ^ pw5 ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;
wire [3:0]	;
wire [3:0]	syndrom0;
wire [3:0]	syndrom1;
wire [3:0]	syndrom2;
wire [3:0]	syndrom3;

// partial sum
assign partialsum[3:0] = pw1 ^ pw2 ^ pw3 ^ pw4 ^ pw5 ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;
wire [3:0]	;
wire [3:0]	syndrom1;
wire [3:0]	syndrom2;
wire [3:0]	syndrom3;

// partial sum
assign partialsum[3:0] = pw1 ^ pw2 ^ pw3 ^ pw4 ^ pw5 ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;
wire [3:0]	;
wire [3:0]	syndrom2;
wire [3:0]	syndrom3;

// partial sum
assign partialsum[3:0] = pw1 ^ pw2 ^ pw3 ^ pw4 ^ pw5 ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;
wire [3:0]	;
wire [3:0]	syndrom3;

// partial sum
assign partialsum[3:0] = pw1 ^ pw2 ^ pw3 ^ pw4 ^ pw5 ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;
wire [3:0]	;

// partial sum
assign partialsum[3:0] = pw1 ^ pw2 ^ pw3 ^ pw4 ^ pw5 ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;

assign [3:0] =  ^ pw2 ^ pw3 ^ pw4 ^ pw5 ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw3 ^ pw4 ^ pw5 ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw4 ^ pw5 ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw5 ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw6 ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw7 ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw8 ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw9 ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw10 ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^
		  pw11 ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^
		   ^ pw12 ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw13 ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw14 ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw16 ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw17 ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw18 ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw19 ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw20 ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^
		  pw21 ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^
		   ^ pw22 ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw23 ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw24 ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw25 ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw26 ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw27 ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw28 ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw29;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^ ;

assign p3_partialsum = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;

assign  = pw_1 ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 =  ^ pw_2 ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_3 ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_4 ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_5 ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_6 ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_7 ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_8 ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^
			pw_9 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^
			 ^ pw_10 ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_11 ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_12 ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_13 ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_14 ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^
			pw_16 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^
			 ^ pw_17 ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_18 ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_19 ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_20 ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_21 ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_22 ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_23 ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^
                        pw_24 ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^
                         ^ pw_25 ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_26 ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_27 ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_28 ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ pw_29;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^ ;

assign syndrom0[3:0] = w0 ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;

assign [3:0] =  ^ w15 ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w31 ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ partialsum;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^ ;

assign syndrom1[3:0] = w0 ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;

assign [3:0] =  ^ w1 ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w2 ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w3 ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w4 ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w5 ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w6 ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w7 ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w8 ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w9 ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w10 ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^
		w11 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^
		 ^ w12 ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w13 ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w14 ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w30 ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w31; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^ ; 

assign syndrom2[3:0] = w15 ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
; 

assign [3:0] =  ^ w16 ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w17 ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w18 ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w19 ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w20 ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w21 ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w22 ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w23 ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w24 ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w25 ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^
                w26 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^
                 ^ w27 ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w28 ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w29 ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w30 ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w31;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^ ;

assign syndrom3[3:0] = w0 ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;

assign [3:0] =  ^ w15 ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ w30 ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^  ^ p3_partialsum;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 ^ ;

assign ecc = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
;

assign  = {syndrom0, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 = {, syndrom1, syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , syndrom2, syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , syndrom3};
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, };
assign result = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
};
assign  = { pw29, pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
 = { , pw28, pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw27, pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw26, pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw25, pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw24, pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw23, pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw22, pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw21, pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw20, pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw19, pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw18, pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw17, pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw16, 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , 
	    	  pw14, pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, 
	    	  , pw13, pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw12, pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw11, pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw10, pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw9, pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw8, pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw7, pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw6, pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw5, pw4, pw3, pw2, pw1};

endmodule
, , pw4, pw3, pw2, pw1};

endmodule
, , pw3, pw2, pw1};

endmodule
, , pw2, pw1};

endmodule
, , pw1};

endmodule
, };

endmodule
};

endmodule
