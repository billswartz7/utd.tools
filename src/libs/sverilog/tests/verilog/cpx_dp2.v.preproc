

	 			
 



module cpx_dp2(
      scan_out, cpx_spc2_data_cx_l, 
      shiftenable, scan_in, rclk, arbcp2_cpxdp_shift_cx, 
   arbcp2_cpxdp_qsel1_ca, arbcp2_cpxdp_qsel0_ca, 
   arbcp2_cpxdp_q0_hold_ca, arbcp2_cpxdp_grant_ca, 
   scache0_cpx_data_ca, scache1_cpx_data_ca, scache2_cpx_data_ca, 
   scache3_cpx_data_ca, io_cpx_data_ca, fp_cpx_data_ca
   );	

              
	      	      output [7:0]    scan_out;		      	         
output  [-1:0]  cpx_spc2_data_cx_l;
   
   

              
	      	      input [5:0]     arbcp2_cpxdp_grant_ca;  	      input [5:0]     arbcp2_cpxdp_q0_hold_ca;	      input [5:0]     arbcp2_cpxdp_qsel0_ca;  	      input [5:0]     arbcp2_cpxdp_qsel1_ca;  	      input [5:0]     arbcp2_cpxdp_shift_cx;  	      input	      rclk;		      	      input [7:0]     scan_in;		      	      input	      shiftenable;	      	      
input  [-1:0]  scache0_cpx_data_ca;
input  [-1:0]  scache1_cpx_data_ca;
input  [-1:0]  scache2_cpx_data_ca;
input  [-1:0]  scache3_cpx_data_ca;
input  [-1:0]  io_cpx_data_ca;
input  [-1:0]  fp_cpx_data_ca;


              
	      	      wire [149:0]    ;     // From mac0 of cpx_dp_maca_r.v
	      wire [149:0]    cpx_col3_data_cx_l;     // From mac3 of cpx_dp_macb_l.v
	      wire [149:0]    cpx_col4_data_cx_l;     // From mac4 of cpx_dp_macb_l.v
	      wire [149:0]    cpx_col6_data_cx_l;     // From mac6 of cpx_dp_macb_l.v
	      wire [149:0]    cpx_col7_data_cx_l;     // From mac7 of cpx_dp_maca_l.v
	      wire [7:1]      shiftenable_buf;	      // From mac1 of cpx_dp_macc_r.v, ...
	      // End of automatics
wire  [4:0]  unused;
   
   wire tied_hi, tied_low;

   assign tied_low = 1'b0;
   assign tied_hi  = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat;     	      wire [149:0]    ;     // From mac3 of cpx_dp_macb_l.v
	      wire [149:0]    cpx_col4_data_cx_l;     // From mac4 of cpx_dp_macb_l.v
	      wire [149:0]    cpx_col6_data_cx_l;     // From mac6 of cpx_dp_macb_l.v
	      wire [149:0]    cpx_col7_data_cx_l;     // From mac7 of cpx_dp_maca_l.v
	      wire [7:1]      shiftenable_buf;	      // From mac1 of cpx_dp_macc_r.v, ...
	      // End of automatics
wire  [4:0]  unused;
   
   wire tied_hi, tied_low;

   assign tied_low = 1'b0;
   assign tied_hi  = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat;     	      wire [149:0]    ;     // From mac4 of cpx_dp_macb_l.v
	      wire [149:0]    cpx_col6_data_cx_l;     // From mac6 of cpx_dp_macb_l.v
	      wire [149:0]    cpx_col7_data_cx_l;     // From mac7 of cpx_dp_maca_l.v
	      wire [7:1]      shiftenable_buf;	      // From mac1 of cpx_dp_macc_r.v, ...
	      // End of automatics
wire  [4:0]  unused;
   
   wire tied_hi, tied_low;

   assign tied_low = 1'b0;
   assign tied_hi  = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat;     	      wire [149:0]    ;     // From mac6 of cpx_dp_macb_l.v
	      wire [149:0]    cpx_col7_data_cx_l;     // From mac7 of cpx_dp_maca_l.v
	      wire [7:1]      shiftenable_buf;	      // From mac1 of cpx_dp_macc_r.v, ...
	      // End of automatics
wire  [4:0]  unused;
   
   wire tied_hi, tied_low;

   assign tied_low = 1'b0;
   assign tied_hi  = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat;     	      wire [149:0]    ;     // From mac7 of cpx_dp_maca_l.v
	      wire [7:1]      shiftenable_buf;	      // From mac1 of cpx_dp_macc_r.v, ...
	      // End of automatics
wire  [4:0]  unused;
   
   wire tied_hi, tied_low;

   assign tied_low = 1'b0;
   assign tied_hi  = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat;     	      wire [7:1]      ;	      // From mac1 of cpx_dp_macc_r.v, ...
	      // End of automatics
wire  [4:0]  unused;
   
   wire tied_hi, tied_low;

   assign tied_low = 1'b0;
   assign tied_hi  = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat;	      	      wire  [4:0]  ;
   
   wire tied_hi, tied_low;

   assign tied_low = 1'b0;
   assign tied_hi  = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat;
   
   wire , tied_low;

   assign tied_low = 1'b0;
   assign tied_hi  = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat, ;

   assign tied_low = 1'b0;
   assign tied_hi  = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat;

   assign  = 1'b0;
   assign tied_hi  = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat = 1bb;
   assign   = 1'b1;
   
/*   assign cpx_spc_data_cx_l[149:0] =(cpx_dest0_data_cx_l[149:0] |
					    cpx_dest1_data_cx_l[149:0] |
					    cpx_dest2_data_cx_l[149:0] |
					    cpx_dest3_data_cx_l[149:0] |
					    cpx_dest4_data_cx_l[149:0] |
					    cpx_dest5_data_cx_l[149:0]);
*/

/*
   
// DATAPATH ORGANISATION(cpx_dp2)

NEW:
    to sparc2 cx2 flops
            ^
            |   
   mac0 -> macc ->---> <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      cr              bl      bl             bl     a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  sctag1           io  sctag2           sctag3	  fp

OLD:
            to sparc2 cx2 flops
                    ^
                    |   
   mac0 -> mac1 ->mac2 <- mac3 <- mac4  <----- <- mac6 <- mac7
     a      b      c        b       b              b      a
     ^      ^               ^       ^              ^      ^
     |      |               |       |              |      |
   sctag0  fp             sctag1  sctag2           io   sctag3

 */
   
       /*
   cpx_dp_maca_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
		          .shiftenable_buf	(),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
           			  .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 1)"]));

   
    */
   
 

   cpx_dp_maca_r mac0(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat  = 1bb;
   



   
       
   
 

   cpx_dp_maca_r (/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	(cpx_col0_data_cx_l[149:0]), // Templated
		      .scan_out		(scan_out[0]),		 // Templated
		      .shiftenable_buf	(),			 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[0]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[0]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[0]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[0]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[0]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache0_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .rclk		(rclk),
		      .scan_in		(scan_in[0]),		 // Templated
		      .shiftenable	(shiftenable_buf[1]));	 // Templated
      /*
   cpx_dp_macc_r AUTO_TEMPLATE(
			  // Outputs
			  .data_out_cx_l	({unused[4:0],cpx_spc@"(+ @ 1)"_data_cx_l[`CPX_WIDTH-1:0]}),
		          .shiftenable_buf	(shiftenable_buf[@]),
//			  .data_out_cx_l	(cpx_col@_data_cx_l[149:0]),
			  // Inputs
			  .src_cpx_data_ca({5'b00000,scache@_cpx_data_ca[`CPX_WIDTH-1:0]}),
			  .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[@]),
			  .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[@]),
			  .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[@]),
			  .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[@]),
			  .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[@]),
			  .data_crit_cx_l(cpx_col@"(+ @ 2)"_data_cx_l[149:0]),
       			  .data_ncrit_cx_l(cpx_col@"(- @ 1)"_data_cx_l[149:0]),
		    .clk		(clk),			 
		    //.tmb_l		(tmb_l),
		    .scan_in		(scan_in[@]),
		    .scan_out		(scan_out[@]),
		    .shiftenable	(shiftenable_buf[@"(+ @ 2)"]));

   
    */
   cpx_dp_macc_r mac1(/*AUTOINST*/
		      // Outputs
		      .data_out_cx_l	({unused[4:0],cpx_spc2_data_cx_l[`CPX_WIDTH-1:0]}), // Templated
		      .scan_out		(scan_out[1]),		 // Templated
		      .shiftenable_buf	(shiftenable_buf[1]),	 // Templated
		      // Inputs
		      .arb_cpxdp_qsel1_ca(arbcp2_cpxdp_qsel1_ca[1]), // Templated
		      .arb_cpxdp_qsel0_ca(arbcp2_cpxdp_qsel0_ca[1]), // Templated
		      .arb_cpxdp_grant_ca(arbcp2_cpxdp_grant_ca[1]), // Templated
		      .arb_cpxdp_shift_cx(arbcp2_cpxdp_shift_cx[1]), // Templated
		      .arb_cpxdp_q0_hold_ca(arbcp2_cpxdp_q0_hold_ca[1]), // Templated
		      .src_cpx_data_ca	({5'b00000,scache1_cpx_data_ca[`CPX_WIDTH-1:0]}), // Templated
		      .data_crit_cx_l	(cpx_col3_data_cx_l[149:0]), // Templated
		      .dat(
		      		      .data_out_cx_l	([149:0]), 		      .scan_out		([0]),		 		      .shiftenable_buf	(),			 		      		      .arb_cpxdp_qsel1_ca([0]), 		      .arb_cpxdp_qsel0_ca([0]), 		      .arb_cpxdp_grant_ca([0]), 		      .arb_cpxdp_shift_cx([0]), 		      .arb_cpxdp_q0_hold_ca([0]), 		      .src_cpx_data_ca	({5bb,